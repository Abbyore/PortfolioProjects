<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.1011.0410                               -->
<workbook original-version='18.1' source-build='2023.1.7 (20231.23.1011.0410)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Price range' datatype='real' default-format='c!en_CA!&quot;$&quot;#,##0.00' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='722.'>
        <calculation class='tableau' formula='722.' />
        <range granularity='1.0' max='1200.0' min='50.0' />
      </column>
    </datasource>
    <datasource caption='airbnb' inline='true' name='federated.0hstwor1cok9kb1aqlz2915j1omm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airbnb' name='textscan.1jrhi5f0yk1ae319efeok09k4h7f'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/bimbo/OneDrive/Documents/Power BI/airbnb.csv' dataRefreshTime='' directory='C:/Users/bimbo/OneDrive/Desktop/ALY 6060' filename='airbnb.csv' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1jrhi5f0yk1ae319efeok09k4h7f' name='airbnb.csv1' table='[airbnb#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='NAME' ordinal='1' />
            <column datatype='integer' name='host id' ordinal='2' />
            <column datatype='string' name='host_identity_verified' ordinal='3' />
            <column datatype='string' name='neighbourhood group' ordinal='4' />
            <column datatype='string' name='neighbourhood' ordinal='5' />
            <column datatype='real' name='lat' ordinal='6' />
            <column datatype='real' name='long' ordinal='7' />
            <column datatype='boolean' name='instant_bookable' ordinal='8' />
            <column datatype='string' name='cancellation_policy' ordinal='9' />
            <column datatype='string' name='room type' ordinal='10' />
            <column datatype='integer' name='Construction year' ordinal='11' />
            <column datatype='integer' name='minimum nights' ordinal='12' />
            <column datatype='integer' name='number of reviews' ordinal='13' />
            <column datatype='integer' name='review rate number' ordinal='14' />
            <column datatype='integer' name='calculated host listings count' ordinal='15' />
            <column datatype='integer' name='availability 365' ordinal='16' />
            <column datatype='string' name='house_rules' ordinal='17' />
            <column datatype='integer' name='price' ordinal='18' />
            <column datatype='integer' name='service fee' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1jrhi5f0yk1ae319efeok09k4h7f' name='airbnb.csv1' table='[airbnb#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='NAME' ordinal='1' />
            <column datatype='integer' name='host id' ordinal='2' />
            <column datatype='string' name='host_identity_verified' ordinal='3' />
            <column datatype='string' name='neighbourhood group' ordinal='4' />
            <column datatype='string' name='neighbourhood' ordinal='5' />
            <column datatype='real' name='lat' ordinal='6' />
            <column datatype='real' name='long' ordinal='7' />
            <column datatype='boolean' name='instant_bookable' ordinal='8' />
            <column datatype='string' name='cancellation_policy' ordinal='9' />
            <column datatype='string' name='room type' ordinal='10' />
            <column datatype='integer' name='Construction year' ordinal='11' />
            <column datatype='integer' name='minimum nights' ordinal='12' />
            <column datatype='integer' name='number of reviews' ordinal='13' />
            <column datatype='integer' name='review rate number' ordinal='14' />
            <column datatype='integer' name='calculated host listings count' ordinal='15' />
            <column datatype='integer' name='availability 365' ordinal='16' />
            <column datatype='string' name='house_rules' ordinal='17' />
            <column datatype='integer' name='price' ordinal='18' />
            <column datatype='integer' name='service fee' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host id]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>host id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_identity_verified</remote-name>
            <remote-type>129</remote-type>
            <local-name>[host_identity_verified]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>host_identity_verified</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood group]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>neighbourhood group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>instant_bookable</remote-name>
            <remote-type>11</remote-type>
            <local-name>[instant_bookable]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>instant_bookable</remote-alias>
            <ordinal>8</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cancellation_policy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cancellation_policy]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>cancellation_policy</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room type]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>room type</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Construction year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Construction year]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>Construction year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum nights]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>minimum nights</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number of reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number of reviews]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>number of reviews</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review rate number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[review rate number]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>review rate number</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calculated host listings count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calculated host listings count]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>calculated host listings count</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability 365</remote-name>
            <remote-type>20</remote-type>
            <local-name>[availability 365]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>availability 365</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>house_rules</remote-name>
            <remote-type>129</remote-type>
            <local-name>[house_rules]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>house_rules</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>service fee</remote-name>
            <remote-type>20</remote-type>
            <local-name>[service fee]</local-name>
            <parent-name>[airbnb.csv1]</parent-name>
            <remote-alias>service fee</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb.csv_685364A07E1645B898FE4CC344C21763]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Revenue potential' datatype='integer' name='[Calculation_3980337668647587842]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[price] * [availability 365]' />
      </column>
      <column caption='No Smoking Count' datatype='real' name='[Calculation_3980337668648398852]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(LEN(LOWER([house_rules])) - LEN(REPLACE(LOWER([house_rules]), &quot;no smoking&quot;, &quot;&quot;))) / LEN(&quot;no smoking&quot;)' />
      </column>
      <column caption='Price Density ' datatype='real' name='[Calculation_3980337668649885703]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(COUNT([id]), -1, 1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='price filter' datatype='boolean' name='[Calculation_3980337668654755848]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[price] &lt;= [Parameters].[Parameter 1]' />
      </column>
      <column aggregation='None' caption='Construction year (bin)' datatype='integer' name='[Construction year (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Construction year]' peg='0' size='3' />
      </column>
      <column datatype='integer' name='[Construction year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='airbnb.csv' datatype='table' name='[__tableau_internal_object_id__].[airbnb.csv_685364A07E1645B898FE4CC344C21763]' role='measure' type='quantitative' />
      <column caption='Availability 365' datatype='integer' name='[availability 365]' role='measure' type='quantitative' />
      <column caption='Cancellation Policy' datatype='string' name='[cancellation_policy]' role='dimension' type='nominal' />
      <column caption='Host Id' datatype='integer' name='[host id]' role='dimension' type='ordinal' />
      <column caption='House Rules' datatype='string' name='[house_rules]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Review Rate Number' datatype='integer' name='[review rate number]' role='measure' type='quantitative' />
      <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
      <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
      <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:neighbourhood:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bay Terrace&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bushwick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Concourse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Edgemere&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gowanus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Middle Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nolita&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richmondtown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Albans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wakefield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Allerton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Borough Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clason Point&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Elmhurst&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Forest Hills&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hollis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Long Island City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Murray Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prince&apos;s Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Silver Lake&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tribeca&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodhaven&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bronxdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cobble Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East New York&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fresh Meadows&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Huguenot&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marble Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Dorp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Randall Manor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Ozone Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Upper East Side&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bayswater&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Castle Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Crown Heights&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Far Rockaway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gravesend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kew Gardens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mill Basin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Olinville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roosevelt Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sunnyside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bay Terrace, Staten Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambria Heights&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Concourse Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gramercy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica Estates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Midland Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Riverdale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ridgewood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. George&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bath Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;College Point&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Village&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gerritsen Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hunts Point&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mariners Harbor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Dorp Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Red Hook&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Slope&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Upper West Side&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bergen Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Civic Center&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Downtown Brooklyn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Flushing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hell&apos;s Kitchen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mount Eden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Port Morris&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tottenville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Willowbrook&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arden Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Breezy Point&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Flatbush&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Greene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holliswood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Longwood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Navy Yard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prospect Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SoHo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Two Bridges&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Woodlawn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chinatown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dongan Hills&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flatiron District&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grymes Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laurelton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morrisania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pelham Bay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Schuylerville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Todt Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Williamsbridge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Battery Park City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eastchester&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Glen Oaks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Inwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maspeth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Springville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rego Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Springfield Gardens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Van Nest&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bedford-Stuyvesant&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Castleton Corners&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cypress Hills&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fieldston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Great Kills&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morningside Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ozone Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rosebank&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunset Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Westchester Square&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belle Harbor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DUMBO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Financial District&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenpoint&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kingsbridge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morris Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Park Slope&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rosedale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Theater District&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westerleigh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bensonhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;City Island&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Douglaston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flatlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harlem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lighthouse Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mott Haven&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pelham Gardens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sea Gate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tompkinsville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boerum Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Claremont Village&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dyker Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fordham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highbridge&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Little Neck&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mount Hope&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Port Richmond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shore Acres&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tremont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Windsor Terrace&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Baychester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canarsie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coney Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eltingville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Graniteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica Hills&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Midtown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riverdale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stapleton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West Brighton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bay Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bull&apos;s Head&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Edenwald&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melrose&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NoHo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spuyten Duyvil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vinegar Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arrochar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Briarwood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinton Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Hamilton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Howard Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lower East Side&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neponsit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Soundview&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Unionport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodrow&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bellerose&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chelsea, Staten Island&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ditmars Steinway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flatbush&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenwich Village&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kips Bay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morris Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Parkchester&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rossville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Throgs Neck&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Whitestone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carroll Gardens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Corona&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Emerson Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grant City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kensington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Midwood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oakwood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rockaway Beach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stuyvesant Town&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Farms&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arverne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brighton Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Co-op City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Morrisania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fort Wadsworth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Howland Hook&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manhattan Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Brighton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Queens Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodside&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighbourhood group:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Staten Island&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Price range' datatype='real' default-format='c!en_CA!&quot;$&quot;#,##0.00' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='722.'>
          <calculation class='tableau' formula='722.' />
          <range granularity='1.0' max='1200.0' min='50.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='airbnb.csv' id='airbnb.csv_685364A07E1645B898FE4CC344C21763'>
            <properties context=''>
              <relation connection='textscan.1jrhi5f0yk1ae319efeok09k4h7f' name='airbnb.csv1' table='[airbnb#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='NAME' ordinal='1' />
                  <column datatype='integer' name='host id' ordinal='2' />
                  <column datatype='string' name='host_identity_verified' ordinal='3' />
                  <column datatype='string' name='neighbourhood group' ordinal='4' />
                  <column datatype='string' name='neighbourhood' ordinal='5' />
                  <column datatype='real' name='lat' ordinal='6' />
                  <column datatype='real' name='long' ordinal='7' />
                  <column datatype='boolean' name='instant_bookable' ordinal='8' />
                  <column datatype='string' name='cancellation_policy' ordinal='9' />
                  <column datatype='string' name='room type' ordinal='10' />
                  <column datatype='integer' name='Construction year' ordinal='11' />
                  <column datatype='integer' name='minimum nights' ordinal='12' />
                  <column datatype='integer' name='number of reviews' ordinal='13' />
                  <column datatype='integer' name='review rate number' ordinal='14' />
                  <column datatype='integer' name='calculated host listings count' ordinal='15' />
                  <column datatype='integer' name='availability 365' ordinal='16' />
                  <column datatype='string' name='house_rules' ordinal='17' />
                  <column datatype='integer' name='price' ordinal='18' />
                  <column datatype='integer' name='service fee' ordinal='19' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Acc type'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb' name='federated.0hstwor1cok9kb1aqlz2915j1omm' />
          </datasources>
          <datasource-dependencies datasource='federated.0hstwor1cok9kb1aqlz2915j1omm'>
            <column caption='Availability 365' datatype='integer' name='[availability 365]' role='measure' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
            <column-instance column='[room type]' derivation='None' name='[none:room type:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
            <column-instance column='[availability 365]' derivation='Sum' name='[sum:availability 365:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:availability 365:qk]</rows>
        <cols>([federated.0hstwor1cok9kb1aqlz2915j1omm].[none:room type:nk] / [federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk])</cols>
      </table>
      <simple-id uuid='{566A8967-E33C-4FDF-84B5-3FF7DADCBA36}' />
    </worksheet>
    <worksheet name='Average price house in neighbourhood group'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb' name='federated.0hstwor1cok9kb1aqlz2915j1omm' />
          </datasources>
          <datasource-dependencies datasource='federated.0hstwor1cok9kb1aqlz2915j1omm'>
            <column caption='Revenue potential' datatype='integer' name='[Calculation_3980337668647587842]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[price] * [availability 365]' />
            </column>
            <column caption='Availability 365' datatype='integer' name='[availability 365]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3980337668647587842]' derivation='Avg' name='[avg:Calculation_3980337668647587842:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:Calculation_3980337668647587842:qk]' included-values='in-range'>
            <min>80899.991264435885</min>
            <max>121824.05501618123</max>
          </filter>
          <filter class='quantitative' column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' included-values='in-range'>
            <min>577681</min>
            <max>26407142</max>
          </filter>
          <slices>
            <column>[federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:Calculation_3980337668647587842:qk]</column>
            <column>[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' />
              <lod column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:Calculation_3980337668647587842:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:price:qk]</rows>
        <cols>[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]</cols>
      </table>
      <simple-id uuid='{50BE3C3C-DBD2-451B-8D81-FA83B158F8D2}' />
    </worksheet>
    <worksheet name='Geographic Distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb' name='federated.0hstwor1cok9kb1aqlz2915j1omm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0hstwor1cok9kb1aqlz2915j1omm'>
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <alphabetic-sort column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood:nk]' />
              <size column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk] * [federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:lat:qk])</rows>
        <cols>[federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:long:qk]</cols>
      </table>
      <simple-id uuid='{2D544D26-17E2-44F3-989E-8279E12A8BD8}' />
    </worksheet>
    <worksheet name='Listing Availability with price density'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb' name='federated.0hstwor1cok9kb1aqlz2915j1omm' />
          </datasources>
          <datasource-dependencies datasource='federated.0hstwor1cok9kb1aqlz2915j1omm'>
            <column caption='Price Density ' datatype='real' name='[Calculation_3980337668649885703]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(COUNT([id]), -1, 1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Availability 365' datatype='integer' name='[availability 365]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[availability 365]' derivation='Sum' name='[sum:availability 365:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3980337668649885703]' derivation='User' name='[usr:Calculation_3980337668649885703:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_3980337668649885703]' derivation='User' name='[usr:Calculation_3980337668649885703:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0hstwor1cok9kb1aqlz2915j1omm].[neighbourhood]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_3980337668649885703]' derivation='User' name='[usr:Calculation_3980337668649885703:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[usr:Calculation_3980337668649885703:qk:5]' included-values='in-range'>
            <min>8.6666666666666661</min>
            <max>3064.3333333333335</max>
          </filter>
          <slices>
            <column>[federated.0hstwor1cok9kb1aqlz2915j1omm].[usr:Calculation_3980337668649885703:qk:5]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' value='183' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[usr:Calculation_3980337668649885703:qk]' />
              <lod column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:availability 365:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[usr:Calculation_3980337668649885703:qk]' />
              <lod column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hstwor1cok9kb1aqlz2915j1omm].[usr:Calculation_3980337668649885703:qk:6]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[usr:Calculation_3980337668649885703:qk]' />
              <lod column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:availability 365:qk] + [federated.0hstwor1cok9kb1aqlz2915j1omm].[usr:Calculation_3980337668649885703:qk:6])</rows>
        <cols>[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]</cols>
      </table>
      <simple-id uuid='{25A6B6F4-E48B-40A4-B540-68913882C4E3}' />
    </worksheet>
    <worksheet name='No smoking count'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb' name='federated.0hstwor1cok9kb1aqlz2915j1omm' />
          </datasources>
          <datasource-dependencies datasource='federated.0hstwor1cok9kb1aqlz2915j1omm'>
            <column caption='No Smoking Count' datatype='real' name='[Calculation_3980337668648398852]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(LEN(LOWER([house_rules])) - LEN(REPLACE(LOWER([house_rules]), &quot;no smoking&quot;, &quot;&quot;))) / LEN(&quot;no smoking&quot;)' />
            </column>
            <column-instance column='[Calculation_3980337668648398852]' derivation='Avg' name='[avg:Calculation_3980337668648398852:qk]' pivot='key' type='quantitative' />
            <column caption='House Rules' datatype='string' name='[house_rules]' role='dimension' type='nominal' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3980337668648398852]' derivation='Sum' name='[sum:Calculation_3980337668648398852:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:Calculation_3980337668648398852:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:Calculation_3980337668648398852:qk]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]</field>
                  <field>[federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:Calculation_3980337668648398852:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Brooklyn&quot;</value>
                <value>10285.0</value>
              </tuple>
            </tuple-reference>
            <label-position x='-503' y='112' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{7D46AA51-AADA-4AC8-A371-0A82FEAC0CC6}' />
    </worksheet>
    <worksheet name='Price Analysis by room type review n price'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb' name='federated.0hstwor1cok9kb1aqlz2915j1omm' />
          </datasources>
          <datasource-dependencies datasource='federated.0hstwor1cok9kb1aqlz2915j1omm'>
            <column-instance column='[room type]' derivation='None' name='[none:room type:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room type]' role='dimension' type='nominal' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:room type:nk]'>
            <groupfilter function='level-members' level='[none:room type:nk]' />
          </filter>
          <slices>
            <column>[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:room type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:room type:nk]' />
              <wedge-size column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:room type:nk]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{88CED75A-C122-4717-91C4-CDA1A08E2FC9}' />
    </worksheet>
    <worksheet name='Price Density'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb' name='federated.0hstwor1cok9kb1aqlz2915j1omm' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Price range' datatype='real' default-format='c!en_CA!&quot;$&quot;#,##0.00' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='722.'>
              <calculation class='tableau' formula='722.' />
              <range granularity='1.0' max='1200.0' min='50.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0hstwor1cok9kb1aqlz2915j1omm'>
            <column caption='Price Density ' datatype='real' name='[Calculation_3980337668649885703]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(COUNT([id]), -1, 1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='price filter' datatype='boolean' name='[Calculation_3980337668654755848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[price] &lt;= [Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
            <column caption='Host Id' datatype='integer' name='[host id]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3980337668654755848]' derivation='None' name='[none:Calculation_3980337668654755848:nk]' pivot='key' type='nominal' />
            <column-instance column='[host id]' derivation='None' name='[none:host id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3980337668649885703]' derivation='User' name='[usr:Calculation_3980337668649885703:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Calculation_3980337668654755848:nk]'>
            <groupfilter function='member' level='[none:Calculation_3980337668654755848:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]'>
            <groupfilter function='level-members' level='[none:neighbourhood group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[usr:Calculation_3980337668649885703:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0hstwor1cok9kb1aqlz2915j1omm].[usr:Calculation_3980337668649885703:qk]</column>
            <column>[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Calculation_3980337668654755848:nk]</column>
            <column>[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:lat:qk]' value='73' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' />
              <size column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' />
              <lod column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:host id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.053977899253368378' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value='circle' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:long:qk]</rows>
        <cols>[federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:lat:qk]</cols>
        <show-full-range>
          <column>[federated.0hstwor1cok9kb1aqlz2915j1omm].[Construction year (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{DF23CFAE-5BFD-445C-99D5-C7C704E2ACF6}' />
    </worksheet>
    <worksheet name='Revenue Potential per neighbourhood and year '>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb' name='federated.0hstwor1cok9kb1aqlz2915j1omm' />
          </datasources>
          <datasource-dependencies datasource='federated.0hstwor1cok9kb1aqlz2915j1omm'>
            <column caption='Revenue potential' datatype='integer' name='[Calculation_3980337668647587842]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[price] * [availability 365]' />
            </column>
            <column aggregation='None' caption='Construction year (bin)' datatype='integer' name='[Construction year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Construction year]' peg='0' size='3' />
            </column>
            <column datatype='integer' name='[Construction year]' role='dimension' type='quantitative' />
            <column caption='Availability 365' datatype='integer' name='[availability 365]' role='measure' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column-instance column='[Construction year (bin)]' derivation='None' name='[none:Construction year (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3980337668647587842]' derivation='Sum' name='[sum:Calculation_3980337668647587842:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Construction year (bin):ok]'>
            <groupfilter function='level-members' level='[none:Construction year (bin):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Construction year (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Construction year (bin):ok]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Construction year (bin):ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:Calculation_3980337668647587842:qk]</rows>
        <cols>([federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk] / [federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Construction year (bin):ok])</cols>
      </table>
      <simple-id uuid='{E6CD42F2-FA4B-4EEE-A6F2-0C3B8EF3DA60}' />
    </worksheet>
    <worksheet name='Review n rating analysis with cancelation policy'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb' name='federated.0hstwor1cok9kb1aqlz2915j1omm' />
          </datasources>
          <datasource-dependencies datasource='federated.0hstwor1cok9kb1aqlz2915j1omm'>
            <column caption='Cancellation Policy' datatype='string' name='[cancellation_policy]' role='dimension' type='nominal' />
            <column-instance column='[review rate number]' derivation='Count' name='[cnt:review rate number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cancellation_policy]' derivation='None' name='[none:cancellation_policy:nk]' pivot='key' type='nominal' />
            <column caption='Review Rate Number' datatype='integer' name='[review rate number]' role='measure' type='quantitative' />
            <column-instance column='[review rate number]' derivation='Sum' name='[sum:review rate number:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[cnt:review rate number:qk]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:cancellation_policy:nk]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:review rate number:qk]' />
              <color column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:review rate number:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0hstwor1cok9kb1aqlz2915j1omm].[cnt:review rate number:qk]</field>
                  <field>[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:cancellation_policy:nk]</field>
                  <field>[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:review rate number:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>33058</value>
                <value>&quot;strict&quot;</value>
                <value>108355</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{9BC0E51A-A27A-4604-8B8B-3DAFEABCBE9A}' />
    </worksheet>
    <worksheet name='building year and price'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb' name='federated.0hstwor1cok9kb1aqlz2915j1omm' />
          </datasources>
          <datasource-dependencies datasource='federated.0hstwor1cok9kb1aqlz2915j1omm'>
            <column caption='Price Density ' datatype='real' name='[Calculation_3980337668649885703]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(COUNT([id]), -1, 1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Construction year]' role='dimension' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood group]' role='dimension' type='nominal' />
            <column-instance column='[Construction year]' derivation='None' name='[none:Construction year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[neighbourhood group]' derivation='None' name='[none:neighbourhood group:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3980337668649885703]' derivation='User' name='[usr:Calculation_3980337668649885703:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Construction year:qk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[usr:Calculation_3980337668649885703:qk:8]' included-values='in-range'>
            <min>28.0</min>
            <max>2171.6666666666665</max>
          </filter>
          <slices>
            <column>[federated.0hstwor1cok9kb1aqlz2915j1omm].[usr:Calculation_3980337668649885703:qk:8]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' />
              <color column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' />
              <text column='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Construction year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{812BEBB8-9AA0-4612-A899-2B2A24AE5898}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Airbnb Analysis' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Smoking count' captured-sheet='No smoking count' id='2' />
                  <story-point caption='Revenue Potential' captured-sheet='Revenue Potential per neighbourhood and year ' id='1' />
                  <story-point caption='Average price of home via density ' captured-sheet='Price Density' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{676ED7DF-A2DD-4E85-8DBE-CA33F12791BA}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Airbnb Analysis Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='airbnb' name='federated.0hstwor1cok9kb1aqlz2915j1omm' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Price range' datatype='real' default-format='c!en_CA!&quot;$&quot;#,##0.00' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='722.'>
          <calculation class='tableau' formula='722.' />
          <range granularity='1.0' max='1200.0' min='50.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0hstwor1cok9kb1aqlz2915j1omm'>
        <column caption='Revenue potential' datatype='integer' name='[Calculation_3980337668647587842]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='[price] * [availability 365]' />
        </column>
        <column-instance column='[Calculation_3980337668647587842]' derivation='Avg' name='[avg:Calculation_3980337668647587842:qk]' pivot='key' type='quantitative' />
        <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
        <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='9' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='29' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='17' param='vert' type-v2='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='12' param='horz' type-v2='layout-flow' w='100000' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='31000' id='3' name='No smoking count' w='46400' x='2300' y='2500' />
        <zone h='8250' id='4' name='No smoking count' pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' type-v2='color' w='21500' x='400' y='33875' />
        <zone h='6875' id='5' name='No smoking count' pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:Calculation_3980337668648398852:qk]' type-v2='size' w='16400' x='55900' y='22750' />
        <zone h='48750' id='10' type-v2='layout-basic' w='42300' x='53200' y='46000' />
        <zone h='37000' id='14' name='Price Density' w='42600' x='41700' y='2125'>
          <layout-cache minheight='228' type-h='scalable' type-w='fixed' />
        </zone>
        <zone fixed-size='275' h='4500' id='15' is-fixed='true' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='22900' x='42800' y='38625' />
        <zone fixed-size='112' h='22250' id='13' is-fixed='true' name='Revenue Potential per neighbourhood and year ' pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Construction year (bin):ok]' type-v2='color' w='12600' x='87100' y='1750' />
        <zone h='49000' id='8' name='Revenue Potential per neighbourhood and year ' w='44800' x='53000' y='45750' />
        <zone h='41250' id='27' name='Average price house in neighbourhood group' w='47800' x='1900' y='48750'>
          <layout-cache cell-count-w='5' minheight='217' non-cell-size-w='78' type-h='scalable' type-w='cell' />
        </zone>
        <zone h='7750' id='30' name='Average price house in neighbourhood group' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:Calculation_3980337668647587842:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14000' x='85700' y='26250' />
        <zone h='9125' id='31' name='Average price house in neighbourhood group' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='15100' x='82900' y='34375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='37' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='36' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='37000' id='14' is-fixed='true' name='Price Density' w='42600' x='41700' y='2125'>
                  <layout-cache minheight='228' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='248' h='31000' id='3' is-fixed='true' name='No smoking count' w='46400' x='2300' y='2500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='4' name='No smoking count' pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' type-v2='color' w='21500' x='400' y='33875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6875' id='5' name='No smoking count' pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:Calculation_3980337668648398852:qk]' type-v2='size' w='16400' x='55900' y='22750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='275' h='4500' id='15' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='22900' x='42800' y='38625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='8' is-fixed='true' name='Revenue Potential per neighbourhood and year ' w='44800' x='53000' y='45750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='112' h='22250' id='13' name='Revenue Potential per neighbourhood and year ' pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Construction year (bin):ok]' type-v2='color' w='12600' x='87100' y='1750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7750' id='30' name='Average price house in neighbourhood group' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:Calculation_3980337668647587842:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14000' x='85700' y='26250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='31' name='Average price house in neighbourhood group' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='15100' x='82900' y='34375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41250' id='27' is-fixed='true' name='Average price house in neighbourhood group' w='47800' x='1900' y='48750'>
                  <layout-cache cell-count-w='5' minheight='217' non-cell-size-w='78' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F6C3C2C7-B480-468E-8CFB-EEF9395B04C5}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='30'>
    <window class='worksheet' name='Geographic Distribution'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{78DFBF39-6EFA-4CEC-9164-F5C343E06755}' />
    </window>
    <window class='worksheet' name='Price Analysis by room type review n price'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:room type:nk]' type='filter' />
            <card param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:room type:nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:room type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{5AEE224C-E797-4250-8CEE-BEA5FE9C4A86}' />
    </window>
    <window class='worksheet' name='Listing Availability with price density'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card pane-specification-id='1' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{126AFB22-ED34-4F80-9677-2037BCDFBB53}' />
    </window>
    <window class='worksheet' name='Review n rating analysis with cancelation policy'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:review rate number:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{673A0204-E851-4342-A036-C3021A2F955F}' />
    </window>
    <window class='worksheet' name='Acc type'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{C609FF36-C644-438D-9971-2F67B871B513}' />
    </window>
    <window class='worksheet' name='building year and price'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B4303215-4A65-42EB-A4DC-F950AD4C3356}' />
    </window>
    <window class='worksheet' name='Average price house in neighbourhood group'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:Calculation_3980337668647587842:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[sum:price:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{79032E35-028C-40A5-9598-6050C0DBBD37}' />
    </window>
    <window class='worksheet' name='No smoking count'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{DE1B7659-800C-4964-8BB2-E320488889E5}' />
    </window>
    <window class='worksheet' name='Price Density'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' type='size' />
            <card pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:neighbourhood group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{7609E411-9AC3-495E-871C-02CBE681D87A}' />
    </window>
    <window class='worksheet' name='Revenue Potential per neighbourhood and year '>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Construction year (bin):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Construction year (bin):ok]' type='color' />
            <card param='[federated.0hstwor1cok9kb1aqlz2915j1omm].[none:Construction year (bin):ok]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B60F9A13-E9F3-4A74-8CD7-3AE4CE328BFC}' />
    </window>
    <window class='dashboard' maximized='true' name='Airbnb Analysis Dashboard'>
      <viewpoints>
        <viewpoint name='Average price house in neighbourhood group'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='No smoking count'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Price Density'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.0hstwor1cok9kb1aqlz2915j1omm].[avg:lat:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Revenue Potential per neighbourhood and year '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D0EE4C8F-10A2-4D26-A6C8-F74FC7C618B8}' />
    </window>
    <window class='dashboard' name='Airbnb Analysis'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{099744F7-9836-4161-A075-8CD915332D4E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Acc type' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Airbnb Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAaWElEQVR4nO3daXAc533n8W/P9EzPicFN3CdBAiRBgSQIkhIpR5ZER/LqsCW7snZc8VaS
      cnZrq7a2NlWbqq3a2qp9kWSzZe9u2XEOZ2PZlpTSSnFsybIpiZJI8QJFkCAJgBDug7ivIYA5
      eo7ufUGJJkUAxDEzPUA/n3fEYLr/GPZvuvvpfz8t6bquIwgmZTG6AEEwkgiAYGoiAIKpfS4A
      Oj/+P39O19gCABebL97z6us/fZnwMgs6+fpPGV/ixRO/eIUPL7Q9sJCVlg3QdbWZuZV+QRDW
      Qb77H/MjHeTtPkZr8zl2PP8lHA4HhOe43DXK0NAw6FHeeuOfcGWV8/QXD/LhO+8xNDpK0+88
      DeicfOsNnK4svvL0F5EAtBD+iAcG2+HwHq5e+ZjRoSGiznyePX6YN197ndmolRe/9gIAkYVJ
      OkeCNNSWcfnKVTIVOHmuhaOPfxnF5sAmw8XTJ7jeO84zX/ka+Zmu1H9iwpZyzx7g9OlmnC4H
      w4M9AFy/dh3Cfl7+51/z2GOPga5z7PhzxEev0jMT4FpbL7/3jX/N+Q/fA3Qajx1nW3yUlp4Z
      APpbzxHEzsTNYfyqRuuVyxx49DiTw92ARHXtLgqUAO+cuw6A3ZvD5bMfMtPfytiijZPvvUtJ
      eRVel0J/xzUWYxon3z9FVfV27LI4ehM27q6tSGdiPojPLlHshq7J4J1XGg4ewedWQJLxuBTU
      aBybRSInbxt2uxO7TQck3B4XITWKzXZ7sc3tQ9RX5XFgbxWnL7RhUTzkZ3lRHArTva2cuNBO
      PB4nHo9/uiYru0p9vPT2FR47sofnvv4tqgoz+OVbv7lT4x/80b/FERzhveaOlHxAwtZ25xBI
      jwXZf+Q4+/buoL6mhK6pOer31oMjk701VgD2H3yIN37yY6rqv0B5lotbe3cBUF+/lyyPnVNv
      /IT8qnoeKs8CYOeeBvbt2wc0cOVyG+X19QDsra8nu3Q7Ra527DkVVFQWQq4NGWg69gjNfe/h
      kqFnsIuLbX18+enniM8N45Elmq9+zPCcxvNf2ZPaT0rYkqR0uxD26v/9AUef/QNKcz1GlyKY
      QNoFQBBSSZxJCqYmAiCYmgiAYGryg3/FnGZnZ5mdnTW6jPsUFxcTCoWMLuM+TqczLevKzs5e
      8XWxBxBMTQRAMDURgFW41tJM3/DYfT8fGx8HYGFhfvULC88lrKlvZGiA4ZHxNb2nt7uTyek5
      AILB4H2vB4NBouEwn12bn52dWXNd83MzzMyt4TO5y93r/ryh4WFigVsEYuta9JLEOcAqeDxu
      wuFbvPvWeeK6gi2rEBbncPqszC3GsSx00jcZx+XMZto/xYvPPsYH75zFkeEiGNEoyslBQmf0
      Zg8KKqG8/Tyxv2rDdUUjYeKyjauXLuD0ZmFTXETCC4RiMl67hqJYsLpzmBke45aqcuTwAWLR
      KOr8LN0L0yzeilKU6+KTgREKi0qIx6JY4ioOZwYWOcbNiQUqivPWXNfU1BRRbMTURYK3bjEy
      PUdxSQkOWaLzk0G211awMB9CC83hyC7Ba9eYmQ/hVazE4xasDisOWeLGJwPsbjjA/NRNNCwE
      1SiFGQ4Gh9qRHT7iagiHYiEUUvG6FfoHx9jdcICcDOeqaxUBWIVoLIbizeDgI4+ix2A+qDI+
      baWmupxwKITdXcm27fmMdN7gUsckoJCbl4HTm0kgApIWRHJksr/pKMQCDE6pCakrv6iMaDSK
      x16C3Z1JLBLCluEgFJPweVygx5iamiavcBveaBSA0opqHHYrQ8NjVFfmo8ailJUU48vKQbFZ
      UIOLxLFhtWoUFzjxeNxrr6uwGAA9EsZbXo6kuMnKycVh1agsjxOPhFgIhqksKkZ2eIkGb+H1
      esnJzIC4RkyLosY0KspKcCoyuscDNheFDhsWC1RVVrIYjBIIWsnL9t1eqR5H1604lbVt0uJK
      8DLEKNDaiFEgQbibFiOs3nuwvtQ5B/EoweDyx/3JJg6BhISbnZ3FooUIx+z0Dgxy5PB+hvsH
      QNe4OTZBaUUlsWgMLbxAfn4e4xPzOHM8uCQrssuHz21PWa1iDyAknBYJIDu9hNUIuZk+NEDX
      dWw2GwXFJbicLnKyfHgzvASCQTKys7BaHMzO+clI4cYPYg8gJEFuQSkAHnfGnZ9VVFXf93s+
      n++uf8WZt9tu30qbQmIPIKQJKxkZax9x2igRAMHURAAEUxMBEExNBEAwNREAwdTEMOgynE7n
      Ay+jG0GWZZzO1Td7pUq61vUgohdIMDVxCCSYmgiAYGoiAIKpiQAIpiYCIJiaCIBgaiIAgqmJ
      AAimJgIgmJoIgGBqIgCCqYkACKYmAiCYmgiAYGoiAIKpiQAIpiYCIJiaCIBgaiIAgqmJAAim
      JgIgmJoIgGBqIgCCqYkACKYmAiCYmgiAYGoiAIKpiQAIpiYCIJiaCIBgaiIAgqmJAAimJgIg
      mJoIgGBqIgCCqYkACKYmAiCYmgiAYGoiAIKpiQAIpiYCIJiaCIBgaiIAgqmJAAimJgIgmJoI
      gGBqIgCCqYkACKYmAiCYmgiAYGoiAIKpiQAIpiYCIJiaCIBgarLRBQi/FdfiTC1OMjp/k7ng
      LKFoiFA0SCSmEoqGUMcP4nbYcDlsKDYrTsVGYY6XwhwPuT6X0eVvSiIABonFo/TN9NIx0Ub3
      ZCfjC2NMLIyh6dqy7wl0Zi/7mt1mpTDHQ/k2H3Xleeypyqcs35eM0rcUSdd13egijNbT00N7
      ezv5+flUVFRw5swZamtrqa+vT+h6JhbGuTh4jraxa3RNdaLGwmt6f6Dz99b0+z63wp6qfPbX
      FPJIfSlOxbam938mHA7z9ttvc+jQIbq6urDZbIyPj/Piiy+ua3npROwBAEmSOHToEBaLhWg0
      SmVlJeHw2jbO5SyqCzQPnuP8wBlujLehk7rvm1sBlbPXhzl7fZi/fbOFprpijtaX0rizCJts
      XfVyIpEIi4uLjI2NkZ+fz8LCAlvle1PsAYDu7m7m5uaw2+3YbDYkSaKmpgabbX3fmABDcwO8
      3fFLzvafJq7FElLnWvcAy8n0OHhsXwXPH6sl0+NY1Xva2trIzc2ls7OTmpoabt26xa5duxJS
      j5FEABKsb7qHN67+E60jLQn/tk9UAD5jt1n53abtfOVYLdkZzoQue7MwTQAGBwfp7e2ltraW
      oqIiACYnJ8nPz7/vdwcGBqioqKCzs5Pa2tp7XhsZGSEvLw+73X7Pz2/6h3m55R+5OnI5aX9D
      ogPwGYtF4ksHq/nmk/V4Xco9r7W2tjIyMsJTTz2FxbL1Rs1NE4D5+Xk++ugjAoEANTU1vPrq
      qzQ1NZGVlcWZM2d4+OGHCYfDPPPMM1y4cIH333+fxx9/nO7ubtxuN6FQCIfDQSgU4sUXX0RR
      bm8oakzl9dZXeKfzbaJaNKl/Q7IC8Bmvy863ju/lycZqLBYJgLNnzzI5OUl2djYLCwuoqorL
      5SIWi2G1Wjlw4ADbtm1Lal3JZJqTYFVVcTqd7Ny5E1VVefzxx6muriYSifDII49QV1d355i/
      uLiYI0eOUFRUhNVqxeFwUFBQwNTUFENDQ1itt08gLwyc4aWLP+JW2G/kn5YwC8EIf/0vl3j3
      Uh9/8mwj20uyycvLQ1VVamtrkWWZ1tZWdu/ejcViIRKJoGnLD9tuBqbZAySSGlP5hws/5Ezf
      hyldb7L3AHezWCS+dXwvX320LmXrNIIIwBrd9A/zvQ//grH5kZSvO5UB+MyBHYX8x68fvu/c
      YKsQAViDk10n+MnFHyX9WH85RgQAICfDyZ998yg7SnMMWX8ybb3T+iTQdI3/1/oK/3Dhh4Zt
      /EaamQ/xX370Pufbh40uJeFEAB5A0zX+/twP+Pm114wuxVCRaJz/8eo5TlzsMbqUhDLNKNB6
      qDGV/33qL2lN4tj+ZqJpOn/9L5e4FVD5+mO7jS4nIcQeYBmxeFRs/Mt4+d3rvPZBu9FlJIQI
      wBI0XePvzv9AbPwrePnd61vicEgEYAmvtryU8jH+zehvftmy6U+MRQA+5+2OX/Crjl8YXcam
      oGk6333tAl3DM0aXsm4iAHf5ZKKDV1peMrqMTSUSjfMXL59hIagaXcq6iAB8alFd4Ptnvrvi
      LYnC0mbmQ3zvtQtGl7EuIgDcPun923PfZyYwbXQpm1ZL1xg//6jT6DLWTAQAeKfzbVqGm40u
      Y9P7yYmr9I7MGl3Gmpg+AHPBWV5vfdXoMrYETdP54S8uoWmbp73M9AF4peUlgtGA0WVsGd03
      Z3n3Uq/RZayaqQNwY6Kds/2njC5jy/npO9c2zaiQaQOg6Ro/bv47o8vYkhaCEX76zjWjy1gV
      0wbgfP8Zhv2DRpexZZ1s6WfKn/6HlqYMgKZr/LLtDaPL2NJicY1/Pp3+w6KmDMC1kSvi2z8F
      3mvpYz6Q3ucCpgzAm+0/N7oEU4hE47x1rsvoMlZkugD0TfdwY6LN6DJM41cXuonG4kaXsSzT
      BeCMGPZMqcVQhNaecaPLWJapAqDpGhcGzhhdhul82Jq+51tJD4Df72dhYYHe3l4WFxfRdZ1L
      ly4RCAS4evUq4+PjtLa2JrsMADrGb+APzaVkXcJvNbcPEw6n58lw0m+Kj0QizM3N4ff7mZqa
      oqGhAbfbzQcffEAgEGBsbIyamppklwFA26RKQfYLBNV+wuowkdhUStZrRjZi7Lb3c1hpp8He
      g7VXgd3PG13WfZIegKmpKbq7u7FYLBQUFDAyMkJzczMlJSXMzc1RUlLClStXqK6uTmodmq7T
      PTONTc7EJ+/D595HLB4gpA4SVPuIRCeSun4zsBFjr72XQ0oHD9l7cFt++60fGzyHLQ0DkNKZ
      4YLBILFYjIyMjFSt8o6JxQW+e+bDZV+Px4ME1UFCah9qdAJS+CSX1TJqZriV2Ine2ej3Kd04
      pKUnDpNcOXi+k34DECmdF8jlMu5Jhn2zK9+3arW68Lrq8LrqiGshQuoAwfAAanQcEHeJ3c0t
      hWhUOtlv72KPvR9FevATcPTgDPGZXqw5yd3Tr1VSA/Czn/2M8vJyCgoKsFgsZGVlMTQ0hCzL
      FBYW0tvbS11dHdFolN7eXvbt24csJ6ekvtnV3+1ltTjxOOvwOOvQtCihyCAhdZCQOgyk75h2
      MnmkIAeVThqVTnbbBpCltX8pxG9+bK4AWCwW7HY7ExMTaJrGjRs3yMvL4/Lly2zbto28vDyu
      Xr2Kpmn4fD5GR0cpKytLSi39c+u7U8liseF2bMft2I6mxwirgwTVQcLqEPoWD0OGFKBR6aRJ
      uUGdbRCrtLHDwvjwx/BQeh3GJTUA5eXlbN++HafTyfj4OJmZmQwNDfHCCy+g6zqSJNHW1sah
      Q4fQNA1JkpJSRygaZUHd+DCcRZJxOapxOao/DcPN2yNKkWF0fWtMmptvnaXR/gkN9m522oY3
      vNHfTfMPJGxZiWKK6dGH/XN8/0LyLoBpeoxIZJyg2k9IHULTE/OI1c9L1klwgXWGRnsnTUon
      VbaxpKwDANmB599fRJLS5/qrKSbHnQomty/dIsk4lBIcSgm6rqNGxwip/QTVQTQtlNR1r1eh
      dZom5QZNSiflcoqGgGNh9MA0kuf+BxMaxRQBmA4spmxdkiThsBfhsBeR6XkYNTrxaRgG0LRg
      yuq4ry50KuQx9tu7aFQ+oVQ25iKgNtuPRQQgteZCxnwL3w5DAQ57AZmew0SiE4QiNwmpfcTi
      C8lfPzpV8ghNSieHlA5yrfNJX+eD6AY8WmolpghAKGr8CaokSSj2AhR7AZmeRiKxOULhPoLq
      ALF44p4yKaFTIw/T9OnoTbY1+UFbCz2SXrdJmiIAkfiDL9Skml3Owu45gM9zgGhsjqA6QCjc
      TzS+9mY9K3F22oZoVD7hoL2TLGvqDvnWSo+kV22mCIAaT+/xepuchU/OwufeRzTmJ6gOEI7c
      XLE/6fPNZh5LckaeEk2PGncetBRTBCCa5gG42+1mvQZ87gbi8QDBu5r17m4222fvxmmJGF3u
      2kVEAFIupm2eANzNanXjde3C69pFyWAPT1tfIt+XxHH6VEizp2ymzxWJJHLINqNL2BDf/AJP
      nbmCMpSBriXnannK2D1GV3APkwRg8+7oLPE4T54+hz0aQ1MVQkOFRpe0IZLdbXQJ9zBFAGxW
      q9ElrNvhy9fYNv3bRj51Ipeo32tgRRsj2YxriV+KKQKwWQ+BSkfGaGi/f3a1QG8pmro5/ybs
      IgApl6EoRpewZq5QiMfPXGCpI349JhPoK2UztjFavOl1CGeKAOS60+vE64F0nS+eacYdWn5s
      PzbvQR3LS2FRiSH5Sowu4R4mCUB6nXg9yEMdn1A+8uDhztBwAbGF9DqkWJFFxpKZnBue1ssU
      AchzbZ49QP7UDIcvX13lb0sEekvR45vjv1HKKEaypNeI3Ob45DYow+FAsabXB78UWzTKkx+d
      R46v/n5bTVUI9BcnsarEsWRXGl3CfUwRAIASn8/oEh7oaPNlMufX3r0ZnclCncxKQkWJJRft
      N7qE+5gmAFXZuUaXsKKdPf3s6ulb9/uDg0XEQ/YEVpR41tKDRpdwHxMFIMfoEpaVsbDIo82X
      NrYQzUqgpyx9WyXsbiz5dUZXcR/TBKAsMwt7Gl4RvrvVYaPiQReh4YIEVJV41qL9aXcCDCYK
      gGyxUJmVfnuBQ1euUzC18qx1a6GO56Vlq4RcdtjoEpZkmgAAPFRYZHQJ9ygZHWdf242ELzfQ
      W4oWSadvWwl5x5eMLmJJ6fQprZumaZw+fZqdO3ei6zr9/f3k5+fj9/txuVy43W4qKirYva0A
      e4eVSBrcIOMKhXjio6VbHTZKj8kEekvx1PaTpLnG1sRa1IDFm56HZltiDyBJ0p0pFefn5+nv
      78fpdDI1NUV7ezuLi7fvQ3XINvZsS4NelDutDsmbrSI2702bVgl5V/pNi/6ZLRGAWCzGpUuX
      mJycxOPxkJuby/z8PHa7nfLycoLB396Glw6HQXtvdK2q1WGjQsMFxBadSV/Piqx2bDVPGlvD
      CrbU1IjBYPCBU7DHNY3/+dEHzIaMuTc1b3qGr/76vTVd7d0Ii6KSUd+NZDVmine57hmcv/vn
      hqx7NTb9HkDXdVpaWojFYqt6/oDVYuELlcZM0b2eVoeNMrZVQkJp+mOD1r06m/4kuL29nbKy
      Mk6dOsXu3bvx+/34/X58Ph+yLNPX10dJSQmhUIjGxkYAGkvKeLeni8VIah/cdrT5Mlm3Uj9R
      VXQmCzVzASU3cRNwrYZc8wSW7KqUrnOtNn0AMjIyaGlpQVEUTpw4QSAQIBAIoCgKlZWV7Nix
      g+HhYa5du3YnALLFwrGKKn7dlfghyOXU9A1sqNVho4L9xcjuIFZnqqZSkbAf+HaK1rV+W+Ic
      QNd1/H4/WVmrbwgLRaP85emTKZk2MWNhka+/+RuUiLFTglhdQbx7elIyNGotO4Lrhb9P/oo2
      aNOfA8DtYdC1bPwATpuNp3ckvzdF0jSePH3O8I0fPm2VSMWsEhYZ5Xf+LPnrSYAtEYD1aiwp
      o9SXmdR1NCW41WGjbrdKJPcGIfv+b6Xds8CWY+oAWCSJ5+r2JOVqLNxudThwvSNJS1+/QG9Z
      0lolJM827E3fScqyk8HUAQAozcziUGl5wpfrCKtJa3XYqM9mlUgG5dE/RVI2zy2opg8AwNM7
      d5GfyJkjdJ0vnk1uq8NGxW55CY8mtlVCrnsG286nErrMZBMBABRZ5hsNB5Atifk49t7oonI4
      vZ6EspREtkpYsipxPP5fE7KsVBIB+FShN4Nn6/ZseDm5s3McaWlNQEWpIBHoLdv4rBKyA8fT
      f4VkM7jvaB1EAO5yqLSchsL1tw3YolGePHUupa0OG6WFN94qoXzhP2PNr01QRaklAvA5X6tv
      oDIre13vPdp8mexbxj+Ibq2iM1lEptc3HGw/+MfY934twRWljgjA58gWC98+0EShN2NN76vu
      HzK01WGjAgPFxMNrm1XCtvt5lKP/IUkVpYYIwBIcso0/bDxEtnN10w56Fxd57PzFJFeVZHEr
      ge6yVU+4a618FOWJ/5bMilJCBGAZXsXBHzYefmAIJE3j+Kn0aHXYqNXOKmGtOIbzX30vLWd5
      WCsRgBXkut38u8OPrHg41NTallatDhuljq3cKiHveg7nM/8LSd58U84vRQTgAbyKgz859PCS
      J8bFYxPsT8NWh42RCPSVokXvn0PJduDbOI7/9y2z8YMIwKo4ZBt/dPDIPUOkjrDKk6fPY9n8
      3eT30aM2Ar13t0pIKMf+E45H/xRJ2lqbzJa4HyCVzg8N8KsbbTxx8hRVQ+l/tXcjnGWjOHfI
      OJ/+K6xF+4wuJyk2/1lMih0pq6DW6SZ04gM2Pplhmsv/Mu7f/w6SY21DwpuJ2AOskxYO4//Z
      yyyefJ9N+bCuFUiKQuY3v4H3ePpOZ5IoIgAbpPb0MPePLxHp7TW6lI2TJFyPPEzW738Ta2Zy
      bxRKFyIACaBrGoEPT+F/9VW0hUWjy1kXW1kpWf/m2zjq0m8K82QSAUggLRxm8d33mH/zLbT5
      zdETZK+qJOPZZ3EebERKw+njk00EIAk0VSXw/gfM//o3xCcnjS5nSfbt2/F99Xmc+9PvsUWp
      JAKQRLqmEb52ncCp04RaWtAjqZqTZ2kWnw/3saO4H3kYe2X6PbDOCCIAKaKpKqGPLxE4ew61
      owNdTc2sdNasTBwNDbiOHMaxe7cpD3NWIgJgAF3TiHT3EO7oQO24gdrVlbBAWHw+HHW1KLt2
      4dhVh60kvZ7Mnm5EANJE3O8nOjpKbHyC6M2bxOf8aOEweiiEHlHRAkGwWrA4HFhcbiSHguRw
      IOfnIxcUYCsuxlawDYvbbfSfsqmIAAimJlohDDI4OIjNZmN6eprq6moUReHKlSvU1NQwOjqK
      w+FgcnKSw4fT8+FyW8XWau3bRMrLy5mbm6OgoIBAIIAsy7hcLjIzM9F1nezsbKanp40uc8sT
      ewCDdHV1MTAwgN/vR5ZlFhcX6ejowGq10t7eTiwWw2azGV3mlifOAdJA9NMp2sUGn3r/H19b
      1BXsV4ndAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Airbnb Analysis Dashboard' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average price house in neighbourhood group' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Geographic Distribution' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO296ZIcN7I1eIDIpRZuRVIiKTav9mZLt8es3/8hxmxsrNVXErW0xFUl7qot
      MyMwPyIcceDhQERRyur57MrNqjIzFsABONyPAw7AhRAC/qQ/6X8p+W0kGkLAn/3qT/o/gbbS
      AQBgvV5vK+k/6U/6w2hrHeBP+pP+T6A/O8Cf9L+a/uwAf9L/apoB+MMdVknvT0f4T/r/O83k
      y2q1+kMTfv78efaecw7OucmjRfJ8jkIIqJsaCPnnnXOo6xoBAQ5uNM1c3pt6gxACvGuNp/e9
      EfXem2nqMlq/QwhoQkAIDRwcAgK896h8ZfK0WCyw2Wziu8In16v8bppmUBZ5hvlnvrgcTdMk
      7/E7AHB4eIhXr17hs88+S55rmiZ+AkBVVUneIQRUVRXrjXllntabNZqmQeXbZyVNfk+XQa41
      TRP50O0TQmg7gHMOy+VyUNHvSizY0iBCOSHR73MhdIPqfKwG5nSYnHNReEtkdSDdYZk//TyX
      QQulxV/TNLFzBgQ45+GdT963eLQERuebK5/VDiIsVVXFZ1jg9Tvee/z666+4f/9+woOUNYSA
      2WyGuq4H+YssSBtanbhpmqiwuHwBQxnRZeNOGNB+53I1TdNbgD+adIOHEOC63ivMJpqlfSgp
      hCZpCNYsbbp5oeaGGNP63vsoUFyhrLlY81sCpju/TovhYd84bdm9972wOcQOwCS/N5sNqqpC
      XddJg5c6S6mTyqf3vrVyCJMUhWjik5MT7O7uJmk2TYP5fI7FYoGTk5Ns3ViKQSu2ylXJs2IN
      dP3y+/F3VxarDrbmBDvfaQ6qXHSFqjuzJMw2IQBdwUQImFHnXOy5uhK995hVs4FZlvv8zhjk
      kntWWj2vTdJA3LEGFc9CrgS/aZqYlqMyeu9RVRUqX2U7awgBdV1jtVqZcCJXD1ZZrWfns3kU
      /txzUo7NZoO//vWv+OmnnwZlDyFguVxiPp+jqqpeeKu+bHVdD6wWgIFl29R1KyfAoM5L5XTO
      JRZE39uaBZhV5aStQst1NpfaVOZwqgW5vPdRQ/I7fJ/viabX+YvgizkWHhONrShnHdgkc/lY
      KHJmvUTy/mazGeSp05vq/1jCzx1Oynh2dhYhtKQtfJycnMT61HBKOi0AEw5xXp7gkcWfdU/y
      052Jn02k9PjXZ3jw66+4e/sTHFxZAh0WbToG5OUplOtxVoPo+/xbwx6dtm4QJukATLk0vPfR
      qdT367ru86eG0B2L+c9Zm174HXzG4gk/VqfXecm9zWYT05jP54OOIOlObT8mrsMokB2cdc7h
      wYMHuH//fgIVhRjmap6lbVnrN6HH/JyOBTl1W+X8odlsllgc4RNQHaBer1A3AYeP/o3XLx1e
      vFpjVp+hCQ4Htw/g/B4+untrUqVZlc3CwY3OQsyF0FpBaOAQGYLWNE02HIM7luSb6yiSFpxD
      1QmrdBbmRTeuBYdiR/U+Ef5S/eXwPOep7wkutxzPHFnp6Ht8TQR7tVrhypUrAwXAQsZpaGU1
      8AUsuOL6NNhZzvFeIu0rJR1gcekydt4c4frB+7j+3hXU3zzA1YMPcHlvgeOmQaV62O8hrhAW
      nrqpsw6LftcqHBcy94x0AMafJWJ4kss/p31iR+jel06thX9Kp2b+rffkb71eY7FYDIYfx3wK
      xtYswJbllucePXqETz/9NNZBrt0suCKdNSAAobc0orGj4nO2vOiyC0m9ipXiTqeHYpMOsLx8
      DV/cvxZ/f37/b/H7rll15yOLYSlkIoxuyPwUkgbw3mOxWADog/IcCaA8O8ar8JDLh8kyzeI7
      tG4Y4GkIznLihD89EjUFtuhn1us1qqpKHHVNUvdacC0trQVM6liGONnJtfLhNKPwh64N1PxN
      YvEd4NA96xCtwVhdMO85npzbohMsmUtm8mlBA5mg8s4PoMl5zBtT7OGzWYJZWfPnzL7lNHK6
      OR/E4lVGcwL64VrLBxJNKPc5by2QmifrGgtbDjaIkLFSyHU2fX25XOLk5AT37t3Dd999h7Oz
      M/z9739PeNb1M0gT1AkwHOZ2rq2vdl7E9r0kv5LA687H5dlqB2Ata2FjxotaA41paCGrwXjU
      QRxCuWaN88uzY42v3w0IaOruWnujT8OlIzw5eKAbJqcg2k7U5uSdH8Ayza+8N5/PsVqtEudP
      Y2mtobVfwtYYaCHKyclJzOvzzz/HV199NXBU+R0N94Q/PQSu62WxbGe8XTWc9NNl1tYjV9dC
      W50IywkaM6anslnrWcNXVjolCyF4mEnSzWlLTlfStviQio6VGkJinmWiRpfRqpeYbzcLrC2D
      4GCEzsl1fRjAWP2IQ8wwUzqG8MGKKJeO5GU51t9++y0++eSTQXpa+HXHqJsGzrXKw6v2mM1m
      mM/n2Nvdw5u3b2JeOXmyrKoW+LrpJw2lXrc6E5xjUmtCS/ByGPn38sEzpyVe+LslkCH0Y/kh
      9PDG6tRFGKBMss5X0q58hbppAMo3R1yPm80G8/kcIQScnp4CSIcFrY5opRNCO2a/t7eH4+Pj
      +N5vv/2Gy5cvY3d31yyvcy7pNKxMKmPCUyzV5cuXMZu1E5w7yx2cnZ0NIJDm3apf4SGE1tHW
      vs3WOoA1m5ujAbSYiP3P2znEsmjtb/GS8wMSDRhSmMPP6fQtBzHXCZmnqqoA188Z1E2N0NgN
      rdOV7xoSlvwHrUHlnmjxo6Oj5P5iscDTp09x586d2G7cntqXsUjzU1UVTk9P4ZzDzs4O1uv1
      KM+WzESo59thCA3tttoBtAYf+yy9qwvPk2K5cXROiz+rqkJVVXHSSyCCxYvwkBNqyd8SXp1v
      SQFooWMLOHgvtKNJ+l3L0uiIyeVymRUkvi51JNZOJtmstpIwB+ZBvreOPeIsbq7NtP+xqWu4
      usZsNsPR8ZFGl30de4fQtCNtOaOoFZOWu607wVO1OVNJWHSYQu79rAChnTWVhtXvsBBpp4w7
      XuSnqeHgYmgEkM4b5Myy5j+neTXJcCPzoxs1OoOhgQttGsvlEmdnZ4O8LD7FydXOu9bo3Pn1
      cKvUX87qCcWwh24uwHkfA9QiTyEFfdKxr165Cuccjo+P8dvRb1HL8/B1rAuy7ElZBzX8BxEP
      NeYEURgSpyRH7LQEIAaPWWlaMeJC4gAKf2OOpHaWdVyR4Eq4dkSobhp4oyw5C5LLu2TVtBBa
      +Uj5OZ31eo2dnZ04eiORpIKzuXOvVqtim3Fejx49SgROa3ltWfiZxJK6oSXVwYZ8T0bZZrMZ
      9vf30YQGx0fHCX8s/JIOt6mnzvaHU047acphN/0ZK9bA8UIl4ddpWz6KFiwLVoTQOqF6bLry
      VXTqcto516BTqZSGCDzXAT/D/HjvcXLaBqmdnZ3h9PQUZ2dnWK1WWK/XCCFkoYPW/Hfu3Eni
      kDTp5wMw4JvLx1BIXxfy3mOz3uD1mzfRqu0sd1qsr9rOqh/5HULYLgSSjBhn5zCohYPlewnO
      6Hsl7WpqEvVdwyD5WywWg0k6IBqASfXwLkLPJNYr57NMed97j7Ozs0TjWtG3DBuYuBza0mh/
      ST8bQkDo4qrGoJEWYG6f6Cus13j58mWEhRxCzjIlfFn1tdUOIKZKvlsa2oI/lvAzaaG3HJxS
      BZfw9kDbq+9B8KjwZvDF6Y0JvW6YMUiY0+6STglurdfrqIxY2+q4HwDJDK1OT9qSYUXyrvgN
      flinVl7nIUuIc3BWW3XL99laB5DFGbzqiS0BN4KeMe61a4hDfrrznLfyLEHm69ZzEoei+fLO
      RS1mCeQYWc/qTmlBsvl8ngi7mHQr3kf4rUODma/MTqY1uNyrmxqhLs8PMJ+Wz7Nar7B0S2zC
      5p3bzCqP9YxGAGPWhX9vdSJss9kgAJCF3gCi4zWAGd0oQOjWxQKt8PnKDxqKtZcu2Jhg8fu5
      5+K1JrSCTnxzx2Wtw/nm1i5wXjnIVYJ6QDtCo8MqchCyaRpUFF+jY/Otd4HWIQ0uZOtZ87S/
      v49ff/0VN2/exNHREX7++Wfs7e+h3tSo6xoHBwe4cePGqIa2rImuN4sH/SzXj/yxUuEyuXBe
      IDmBQgh49OiRybTMasr10uiPWJGoeY3RhjHNm4M01nPJb7QdF93CFRkbB1ohLDl+Yx1gLP9c
      B9ANyu/wCJV2lHXEpygT51y7E4WEWgDJUkhr1pw/WZiev3iO169eY7FYxEkxsVBPnjzBzs4O
      rl+/ni2/hrGleipBRg2vdUePoSXyzDY7wED4nUtMtoYYAJLFIjmNUdIEuftRK4YQ8Xtyr//R
      JYg4rsxbdwAtFCntfToWw6QtwHn8hdIzPPTMOF2cXL0FSQjt+osYFWoswtd8jSkRWdXFaXnv
      8f333+Pu3bvY2dkpllXnlctHP29ZN8lb81c3DUK3HnurO8PpxpWeGrUTC79rG2jWadrcijEm
      qWymAbSiP46laUKDRvkfrvvnnIsRl8yLpCPCfx7dkSuD7ghjfoXlw7DA69G2ttPTOHhIJ/Mc
      HGbVLFplnb5uAybJL5kQC/24GEOxTz/9FA8fPsTR0dFoJyrd13XFvOTgkO4wsVOEC9gaMRBz
      JVigzTsHnZnpSiWF/re8I71c1vJGCCB5yRKVRBBaPmfVDLNZ+8e7LHDDlOLmc+XLlem8jqFO
      cyxv51wsk3RsfndMYHL3cnx755LITub1/v37ePr06WiZcx18isIp1b3cr7yPynfr8wDeSYhv
      frzceY/KewQgCU8ICObOaFwRAZ2Jd61As3AKtPHs6HXQRjt3zvXbdUgn1HHwTHpW2OLNoiY0
      8PCmts7RlE6indmcwsnBL34vVy7LKuj0+TsHxXEYuuV467w0nOVrWqFavDNvYvUq17ZvuwCr
      9Ue3GgwnjGhhA5DsjMDQSO4J/rbelx4tz4k2jxVO/x2U2SPemEd2DK2y6MYec7z1d2mcyvUz
      rLkll7+XZGLIWvdQoikdTbcHd2K5xuu6Qwc5+T0t1Ll8rGvaqc29w895+ISHpgtZAba8JDJn
      LlngQiK4baeIQ6YdZgfa3iqRG/F9p2ZmXT+K0an6gQ9iOZ1jzpZ2sDlITD/Lvy18PyVffW8K
      nxZWtzSz7sxcLmmHsUX0McqT2oTTTnaUc4BH1xlINQWakCvlZfFv+QDcqUrEUMi5LXaAMSeG
      F2zH60gL1FaaXEDEULrwOUHUfgVQ3puUG8O0Wt19WVGl+Y+OZtPvdJBrsBLlHFEgHWFif0mX
      1epwTNxhLGyvNXXCW/sFTQMEn4aUax6Sa5D62wBwsets6hrz2bgoakfXWmnGfE75vnUfwCKG
      PBa8kWeE9EgDp1PSjpaWsDCo/p1zUvm7rLTSIdVAa61c6C3QeYU/t5xU+yM5/yQn+KwE9LWx
      dLlzo7O2CO0I03w2T3wiq54FCjnn2tEX3/NWFXwtq34ssuqXFUkWUoWW/vDt0V+8eDEJJwe1
      CatlznUEn1WoRFB9D6P4Hf2clSfzphtUk4VD+X2dX66TlXixoE2Jcp1Na2POz0rbUhTyXS9A
      4bggXTbnHJ4/f46DgwNUVYXVaoXFYjHgUVs2TicHJVlZaN5lvkfkS7ep9x77+/vb2x49BzUG
      kCGzV3+EQEqbaBMtkxqy8CMgtJgTQ0gg6VqNZZl85kGe0Txyehb84uf0exbltHbMi0JFCBW2
      q9zqDXSEuxX2PWY19e+o+eUaejjD6TShSWb5hd577z18/fXX+PDDD82JMK4//i55NiHEYWrZ
      prOfz3Bt+3eWRdJO6s0PFdh8Pm+HhsMUtXJOCiHgl19+KVoAvazR0kpSGLkXZywpviUEe1tD
      55w5QlGKsrQEWWgwg6ry5HSssiZlIyHW745BJd1hZeOtvb09nJ2dmdhbv6etYq6+dRm4XppO
      6PTssRZkuVdVFR48eBB3j9Dl0dd4klPnoXevKM3Ks9XY39/HfD7Hy5cvY1zXf8QHEMYs82tp
      UUuLy32g2wS3aUAqwNR6vwdjaqtgkZ4xlj9e9udolEunb2lfC5okvzvhbxfPY3zeJKP1LQsG
      IE4qQtrJuTiEKHlpnrRzKmlbSxWt/ET4ZSjcGi4ea0tWgjIHsVqt4s4YsiZ866NAU5y/MThg
      YXT2Dfr5giEePY/wjz2nIZJ+1xL+AaxyGIh/wLSTc3L5nZyeAAFxrx+L51waOX+F3w9kwWRS
      0dE7uXSsDv327Vtcvnx5YCEkL7byzvWBkzm/ZUwZyZ/3PgYwet9vHLy1UAhLC1razIr50aQr
      1Ko4DXmYdASgTvu8nTSnlTnUQeAJgBhQV1VVDBNgDF3aJl3no2eQJXxDMG2Jb/ldsnL8J6Ek
      XEYuj55cHKvHjz/+GI8fPzY7SJSRbsLKO188JITf09aeDxrRPpzmc2sdoLQzAvfKXKNr/G5p
      kynEeelrggMl36lWgnGtbDql33fOhjp9eajcrr9XyjNaEQT4qh3F2Nvbw3K5hPc+rue1+BHS
      97TyMTs6QU2OkWLIx3A0RyEEfP755/juu+9Mjd4OsSKu7WVLXxoKZ1mRNq2qCteuXYtOd87f
      2ToEkk/ePZg15pgJttJKnLFC8JaeONFDbdYhElPK5Fy/x47ssmCRtljc2bRmzcGvQZ04YG9n
      D957HB8fJ3xx/bLwcLpT5gA0ZpeJLl6foSHIGCQRYisVLU232VdUDujrQkaWNJ9cpyH0Awus
      MNfrNVarFTZ1Ha2syIu8dyGL4nMCnDPxQpYWs3qylSfDq6xme4eyAO3GVE2TP4CDeZDvzIMF
      x/QqL2mk2HlDg+ViiUuXLmG9XifbE1rlyo2P56yD3OOhR3Q8aKGVTxb4EgTiZ3/55Rdcu3Yt
      /q6bBk3dROgiSimEAAltKbWzCDWPFEkZJPQaIQAKAYicbdUCWNqNt+nThdGQiRtqqtDmOtDv
      6QTMW13XCAXBl60Hk6hWpTFlWWPJL9G+EUJ7RvHr16/N0IUp5SzWq0M3sdA7uc77ZBNdjbWn
      av0nT57EIdr5fI579+6R1kaC1RlKWXnocsv3ku/EHVgrpguLBbLMl/VOFk9nIIJO2zLL70JW
      hZdS8n54KIfmzzkXZ0FlP5uBU6bmG5L8m1ZodMexYE1JIETT6zqVqFq49OA+LZilOtU+gPB6
      9epVXLt2LfXt4OCqYXRoAm0KHUxf13JgdlraaGGrHUCTblSOdyk1Vu6avh+6hnMF2KT5OS/v
      TbfkUGsn+c3hJPEdirCsqipuTVLKRwt/Dq7kysP+hdR1QD/8GmNygF7zI/VTcg6nzquklKRt
      P/jgA3z11Vd47733sn4fC79O23qe5wdKdSW/Y3ma/vpWfYBcZbHwayb/iPyaboG3DpW2rA5r
      s1wnsd4rzeQmz1HD1HVt7q2vhX5sPbHWaJI2l0GXRWJ3QhT2FAdz/VjtNpUf6x5bEP4swdGc
      jOT8KitCtqQ0+P5WO4DF3JQGFsdGmB17PlaK98m+oXo3BP28/OZ8tHblkRDhqa4b1GjiqZH8
      /pQOxd9L2L1k+vVpL7wYyCHt+O1L7T/negtQmnyz8P5U0jDshx9+wEcffTQQWE5X2msMXml4
      O4UvljsNK7e6Oa5efDDYLKsATawIQ/7N16Mm72CQUMksaqyaW/4YQsCm3kAOVwD6gx145VUI
      IS70sDpZ6XeuEWX4MfduHzbQT7qFIBt3IVopDlko8SHX2Gppn8TqMFp56Gc2mw329vYQQnoa
      pZWGJm0lY7m79ubrddPEhTZW2axybv2IJI1Nee953YstbcwM80mSbE41WdrB6jzx2fhOk65m
      6niOB1I4F/uXtgy6s5WWYEq6mn/NI//JVixNaLCzaE9M2dR1DFNoZ5mHDW85glMoli20baZX
      441ZK3n/xx9/xO3btxNFYeUlJMJr+QrJ7/Zict07h9q1HUGfPsPpXwgE0hqWzba+LqQ7Qwkn
      auyc0/Ya6wpvIbQTMAiylQcwU/wlW7gYgqU7sXMuNoouW45X1mr8LOfdhAabeoOmbkMFNpsa
      y8UCqDetwHgf11aX6pd/WxbIUkYIQFM38LP8DK/2JaRu/vnPf+LTTz/Fzs5OorxY0TEfOWsn
      acpZDJZ2761zF4HgkIz2MJ/8/IWNAon5s3wDJsuJ0X5B7j3Oi6+LxRGKeLDpR48Qd5cA9FJG
      SYcbLtH8rucx11kseKUFh+spCj8trxRYI2Pns2Y2EIRSfVrCz7913c9msy7uPl/fku5qtcLX
      X3+NnZ0dOOdwdHSEL7/8MjnQQ8MYgaJWnWleBVL7qjJ3FxkoupB27GixQxMnzoAL7ADA+I5p
      QNnpzTU2N5yubLYkETsiGHCBvrth+omAyrJAING+OeG3eLU6ujSOaC55zjsfd1oGhnFSGkKU
      LCmTBV20EHoMQ5i1YgDagzK++OKLJL5KQo41LBThb0fsHGYU58PQOVrquu53mkAPWz3xYPlw
      fC0eEysdw7X1/R9bE2wJwJT3LIpaE0hGgfheLwj9EOYUPKwFmg/1BoZYvyRQmmf+HiEVeosk
      R63meNLafUyYdb3oDqAtJ18v1dWTJ08A9KdPWv6X5kugW0XCb3UsoB/GTYLkmgZBOehW2Vkp
      SieSQQHvtrggJqeBpsS9W1jRauTWpIXoCGocLJqCcxONOkaWMLXp9SnmsKwugwVD+BkWftct
      N2QLldPirDFL+ebKZ7WDaGfeJMxy6IW893j16hXu37+f8MBWbjabDeYq2nZIJwt1eaMfBAen
      h5sxlBFdtsRPQ2gnwar+ftNs+ZzgHl+jHbLyLjm4rV8p1RaJYw2sxrFMaAghwpAMI4Bhui3K
      zT/wmDtrfkvALEfS0oZp47R86lj/klbfbDbxnC9u8JI2LHVS+fTeY1NvBpsV5KhpGiwWCxwd
      HWF/fz9JU+7N53Ocnp5mF75bikHXY6WUCFvHUhsAGCgUpq2tB4gx3K4dOnTOtTLeqImbEHo8
      7ew1AjouJajnZ1UZKmj/oISJJb/cfVmMnXTADKRLhJz9EFr212q43lnnsOMxyLdarZIy8RoM
      qy6sslrPzWfzwR6iZl007Umbn3zyCR4+fJj6M125F4tFAo2knMKPPp5JrmvLtqlrmuvIb29j
      WSgHW/E5t8WJMGvIk0m0vmZOGlfIwrt8T96xtK4sfdNYWJ7XQiY8671+pLGbpomx6jJJpOFB
      DvoxnwylnEs7uC6DLmuO5P3cBgGc3pgl5HetaxriHB8fx5PiJW2pw+Pj44Fjy2lJnbNF5TmS
      2FbqXat+LHjJdWqVP+kAR4dP8ODwV9y59QmuXZ6j3myw3NnB6ekZjo5+w/WDa3j67BfcvvMB
      ms0a67rGXldwTbkeZzWIvs+/pdC584FzHQJA7ABMumLkmnMuieLk++0oRLvonsehdceyzLgm
      EX5Jx1fePCI0t5aB8+J7fGCH3rBLl/O8ZMUayQiL9x4//PAD7t+/n0BFy+/RPDPcA/rt7qVu
      uNwW5NRtmRtlFAskZeGh1KQDNJsNgvN4/uQnnB7P8eJ1jdPfXuHg0g6OMcOboxV8fYRvvvon
      6tkCoWnwf335NzNTq7J1BWoNLr3fKnRJ0C1BKy1YETNcgkXanLdQrl+aJwKWs1CWcyrCLwJf
      giw5PM/lz1kKCaHQp9iUhD/nN/A95ke09OnpKa5duzaAJDltbXWK5LoFV1yfho7tsngvkfMu
      8QuTDrC8chU7b47x3q3buHZwCZuz7/DR3b/i8PkrfH7nfWzWa3i/j3//+wk++a+7idN6Xsrh
      ZRmqGsPAZuEMc2c9I39jwVdCWlBz0CbHawghNqIIvzXryWnn0rTgi4YL6/Uai8Ui8Q04D008
      qSfp69McteWW5548eYJPP/00ppODVxZciW3QDYCIpZEFLFEhurReLH60tZBPDdl4eWUI4WI3
      xrI0ljDCU+WCiXPatEQiXDwZw/csq1NKJwdjrDJZ5jmadO8GQ5sal8qnLm+uHnN8id/Do0SW
      Yy8CZpWRO710EK4P2RDgwYMHuHXrFpbLZbTspXwS4Zcw7VhX/YCArj/pCICLB/9Zdc/KpaQI
      pY63OhGW02paUHhyaQyaTCXWfhqz8llaFr85p1Gbb12mpFxo20uG65rQJJ2A0wcQR4R4X32d
      xxicsawU+0HaAdUBi6LBLdLXZWjz7t27+PHHH/H27Vv84x//iM+W2jymCZccceWJDymvd75b
      qWn7XkCq2LSSYx70c8CWOwBrMq4E/cmTLta7JbL8DHZ8ZRtzuZZbZ5Az3ZyHxT/H4YOEVM4S
      jkOaoWs82FrLdecZWB2pSWayh6NGFr9SDzIJxcKtsbSGCWOh4rPZLO6w5pzDxx9/jK+++mqg
      dfkda7RMh8zrDupcu/vGerOGU/FcVpklXSsSmdMU2upEWGlBy1iPlcqYsnhmzELo0RBJV2tL
      rV248Sw+tFlHCP2kH4YHyLnQzoPoQ+qkHADiLHBiGWTOpMtDINLYYhbGylJmPjONF7uzIsql
      x1ZC3/vmm2/w+eefJ+lZmFyuSxo83KnbYz6fY76YY293D6/fvE7KZdZdBl5zujxpKPVwIYvi
      LdPDPZavaXNVwujn5QMYmnmt+a3vlkBqi5YIe8bXyDVeKd8QQoyZSab1J5ZdzjEIIUStzcOC
      lj/DZWLeZ7MZFosFTk5O4ntv3rzB1atX4+7iVnl1/QlxJ5bPuq5RzWa4dOlSXDuys2zXP1h1
      y7xbssKKQCws57nV9QBjmDVXUVOwvwiCw7SOIDxovqwOwvyyVQIwmFdwBHP4OSt9C7vKZ44n
      HZNTNzWsqsnl41w/OeaciztXaLLKy8IiVuTo6Ch5dm9vD8+ePYuLXhJYSO05WZm59vCM45MT
      VN5juVxitV6Z8mMpGSaJE5MgOt46Xnja6ppgjQf1Z6lC+N1EOIA2ElDu+XIH0MJVVRVms1m3
      uio93sfS0NqM6ue87w9gs3ieYqmsutHajiugUlhZPrUgMFQSPJ0TJL4uIc0Mm6y2BPr6ZB7k
      uw5ys/yB+GzoZnudR1M3gGuAUOH45Hgw3C7a3HsfQ2sscmg3MRMeeDhV0tl6MLoOm2MAACAA
      SURBVNwUba6pJDRNZkZYv58ToBBC3JrEGiJlLcaYmDE/k6xSqtEJG9KNniwyO7ZqmFz5eJRM
      r0jjsrRC1QceLpfLuBeRZS20UJ+cnCSHAXLdyHsiyKvVKvWH0EOonNUT6iFp6GL81TBqGCqm
      ptPqVy5fgfMOpyenePv2LYB0u5SkLqgzcnpbdYKthcua2CnJETstMryYS7O0IFoqwjnXTrgZ
      GFTnaTlRnB7HW4fOWbVgkubDus5lyJEWQisPhkxC6/Uau7u7cT9RmSOw1mivVqvRsHW59/jx
      47jdOZfNgoQcKsGfwPAQDO7gFkSU52fVDLu7u6jrGkdHR4M60Olwm3q/xfUAjANzUELuW9f4
      ndjorj1ZsCQ4pc4GetcK9dVaQ/6S4bl+45Gk8+hwbK5oTm+MvxLFgDzyZZjnouWkoWDnHE5O
      T5IRMZ1OLpSBLWsIAR988AEePHhgWjz9bPTbcvCWOo8FuVhwN5sNXr1+hUv7lzCbzbBcLnFy
      cmJaNJ0my9WFbI7LODuHQTUEMPFwJn1ufEto+VmmHOzQsGKz2WCxWKjhvO49oOiGcyd4V8EX
      yjnoU0ks2Gq1asNNnB1oGNfPGkPZXA751EFwTFOtn/Vcrn1c5yvUmxqvXr2Kfpi26Jal0bTd
      g7LVQWqWhrbgjyX8TFropwjEVLytO5/pZHaxK7pTWn7HFGtkCZgFCTl9/pOgN0sAObpys9kM
      nH7nhnE/QH4ikhWMvK83PNYxQVyPfITTuygEq41z8yLa0li+z1bXA4iJbYWmd1480n0dszPG
      tJGp7jznrTxLkPX1ktlt6B3vPGQnCIYLU3myOrXulBZMmM1mCX865kV38hAC6tBgZpzcyB1I
      z9LKfv18Tb9r8Sn3Qgh4+9tvuLS/D1/5Xlmcs82s8ljP6M42Zl3491ZHgeKuADReH+oAP0uF
      Xwu9PMtYlxuKcZwu2BSYk6tMfa31O9DGrHRhBdxxc040jxZZjc75a8iVExTGv1rj6Vlzrtuq
      6peRWrE+Fnb3ziO4kK1nzdOVK1fw5MkT3L59G69fv8azZ89w7eAaHr9+jdVqhStXruDWrVvm
      +xra5MIYuGw6jYHVIwuklaYu09aiQR89emQz3M1qSsdgTaOJTyQB7O0LxzRLDtJYzyW/Y0hC
      6+Dydh+yS1su37EOMJZ/rgPwny4LdwA9esL7DOnZat5UAEjDFrQwWpBT0n3z5g2eP3+Ond0d
      vP/e+4mCODw8hPce7733Xrb8ORirO2iu/a2OYwm/Vrjb9QGMwnhqEN6/sv3d7RSgoianCHhO
      MPRzcYsNbV77Hx2ziMd06jW6U8z51E5paaoxsjqXDGtacIQPmtawKYT0PF5+34J2VscIIeDy
      5cu4dOlSsqZDynnz5k38/PPP2Nvbw97enlk/ukwainKZcr8tebHqlNd1X1g4NPdUC6/CtXHe
      evFGSWtLQ+goQo3r5XvcH4gDzqgzOADBObgO30soMwsM0B+AUYIHFq85ODTWASwYBwy1o1hI
      nq/QnU2c4sr19TyrZolgc/o5zWzdl84GDN/58MMP8cMPP+DmzZu4dOlSfL9U1hxZ7+XmTrRD
      Lu0qGx5vbVcIzZyYW2Fi8IyqTA46s0h3DHmn7t6rmzp+1/jXyQaDlLRoyFlVYVbNMKtmg5Mu
      GVuXBL8EjdpYnjLcmUo5odS/Z124QmuBfVzYD/QWmHksKZwxaOfdcE5EeP3ss8/MhVLWsxq2
      lhQhU65T1SrsWsp9YYfklcbL4/Q1Qnq2Vrc7miZdQZu6jmlL6LBrb8bFFDJ0KdAmam+HaAU4
      8Ezu5ypezwozb0UKQHAhOQP398ApfiZnHQZwT8EvnU6uXDmYkoMcPI/Ak26aVysvXfd8zVog
      b/Eu78QQdNfvnBGw5Zlgy1FKCtmN9sRdH5omCizonuXcRGcGAa7bLxJAxLLxSYc4XOnRD11a
      PLKDaJVFN/YYxtffLayfW3L5LsTpcLxQ7hmLpnQ03Z7sJ3AAXTLzih4ecV2WIGTOj+M6HCuf
      POfRByyK7IiVuhAn2HJ4pMKSXi575cAhAHH7cgBx/iB5Xx2DBDh4ig6VCSDhQQug7gAl/lkj
      8SSQflZInG2dt853rO6mPK99nRI00p2ZyyXKZsoi+tAtYbWwd3LNOfjYDims0UFrJdJ1Z2l7
      /syRjlC9sFMimQRuaLyZ4FHRFiJFhKF04XOCaDmXY4Fm8p5ptbr7sqJK8x9NLi2TdBk+SqQx
      rwUrmE897s2aUr/P70peFrbXmlquSUBiu9Vmv0UlWwJdf/Fa15Z1061R7hTapq4xn42Lop4M
      1WHsluUd+/6f2R3a+x7yZDSpFtrcVHdJO5YCunJ4WaeV62iy0kqHVEu+IYR3Fv7cclKt3ado
      e/2+8KevjaWbPBdC9J1EGeiRJw1TEugUUh6qyj6eyqLcMyW/JZd2CN22KCGE5IjPP4JevHiR
      xdv8KfcSIeyt5UCTjBUKGC61y2lTIQ0hcjxbHdDycQT3MgTTaU9Z76x5mOovlBSFBR2stC3l
      ooVZSENCXYfPnz/HlStXsFgssNlskiWZQtqycTo8TwHnkt0jer9v2NnF4vA9VlKXLl1qLYBz
      Lq7p/CNI8N2Y1tNYNGkY2B3Ewq0yth3fa9I0LYxsCbfV0JY5ZwGYKkBTNLd+T/PCHUuTrHLT
      cT0WXCxZTZ23c9M2KABaQeWNp4Tef/99fPvtt/jggw/MiTCuZ742WFrpu3pzDnVoEYTrtlYR
      yyJpJ23ohzPC8/m8261jqlo5B4Vgb4zFxLjTWqerO4e8I89zGrkNYTUu5TQ0saCX4BRPNuXS
      0bwMhD8jxFOgku6w0vn39vZwdnZmYm/9Xq4Tl3jQikaELlnI4pDMMXB9VFWFBw8e4JNPPjHL
      o6/VTYNAmp950rtXrDdrICPFzrtoiS9duoT5fI4XL15EK/Qf8QGAIZwRsqCRpcXlPtBt/hQF
      exhQNoBYBco9I/mXJsH0ogu2UnAtrouTcJn0mSyeB890wu99Cw8qw8nP1S+naflFQD95J0sT
      g+uKApccv6rrQZdLUMEYhu8nQJs4FK7fG6RRaFYZqWqaBqenpzg5OQHQH990ISfETH1Wk3aq
      +HmpUCANkvNd6K/WglOEf+w5y3/hdy3hj8+G1nGkwaw+Xdgn55R44fxOTk+AgLjXz1gaGkpy
      mvqZENKARS/KyODDSoe/z2YzvHr1CteuXUve5TxljbVMFFpDzvKsdV3Xj/x532+VL9+BLYZC
      WFrQ0mbc8GNYuuTIacjDJFpFk4WRS+WxvnN+es+g6Lx1MU6Vr6IDxz6O7H1f2u1N8hGNCLTm
      3XuP2WyG+WJubmyledWd2FIsck/v3CYk64gtf6NE9+7dw+HhYfIO593m5eKyyal+ZNLhpK67
      8A9WjlZ7b60D6DgaJu6VFv4H3v3wOU2cl77GjVhyTK30gFajyaZT+n3nbKgj5Z0a7cp5RuFF
      u+fp/t4+9vb2sJgv4NCeb2BaHyKN/fX15FrvVQJAIlTcdiyEpXkWAPjss8/w3XffmcIvQ+Pa
      mnJ+Vt2w4pPTgrz3yYZdVvm36gPoSpbpee2Q5kxnKS1+pxS8pStND7VZh0hMKZNzDjs7OwAQ
      MaVF2npxQ1mx9jlopX/v7e4BDnGHB0urs/BwutbciO4IEbM7j+D7iS4rODD3O0dx/XAXmxVC
      ei4yOsURQojPWCNLrNgsGfLeY7VaYbVaYVNvEl+A6+XCguG40XNYWmtqq3FK73M6bEJz6Zy3
      HELet7sS5A7gYB7kO/NgwTFrHS1bxyY0WC6X2N+/hPVqlWxPaJUrB/lK1oEXx8TzlH2/8ZXO
      y/K1LAqhD3I8PDzEzZs3ozNUy+hSZ5HluZyfosujg+zk3bqucXx83L4bkGygxnK2VQvAlSNO
      h15AzUxpyJQz1yUqrQ14107A2FFGD3I0n88H1oWFzrl2dVnOL5H8tG+EAGzWG7x5/doMXZhS
      zkn16non1/kqhihogeTONKb1Hz16FHmezWY4ODiIGt45RIdXQynLUlq+i+UTMnEH1orpwmOB
      Srg3Oo+ZhRm5NGNlYjhc+nuEnt8p5Q/0B0aEEKJl0Jrfex/35uTtxbV10RhYp6XrxwptKAmE
      pJGUqRvDF9XMkEcrM64jnbYFsWTS6caNG+ncDBycH0aHWtDGolyoi3zXndM5lyzD3WoH0KQb
      NYf/rUKPVUTUsA6tE1WABjq/8/AuPPM+OAJVACThJLrTisMtk1WlfLTwW1DRuibEWjPWNW9M
      EEJ3VhbQh510gqdOsbHyKLWVEAvgrVu38K9//Qu3b98utntOk+cwvgXpcrAwWtQm5W/r6wF0
      gSwNxoz+3vza2cNhGILVoKxlcp3Eei83GaavccPUdW1umcgaMVc3uTzku14LrMsSjyJyAXFg
      h9ZicNxSyULrso09p5WAhk45fq160G2Ys4hW+nxd0pLvF3ZCDJu1kgZhx0bI0gBy3TmX7D0j
      z4jGttaEWp9WXkC/5Ujd1Gia1Im1hlGnQj8tHLnNwSwBS5zjTqPy+gNdPzEdR+k5N5g30NqY
      r0+xQhbvAcB3332Hv/71rwOB5TTYwlrEfhEjCOa16ay/9lXYl9DvbK0D1HSyN+/Dqc8A04Vk
      E8eU8w3am/0zFhTQ2sbS6m0ywzidEMJAw8rwqqxpYIfWSr/UAcdghK4HyZtPewmh1+xxwy7a
      W2nmZ2beY1Zss9lkx/uZ9FJHbX1DCInjb6WjlRx3DG2J+XC9JJ0QsGlqONduvZObk2D+tucE
      oxd8SxgsczhVKDit3DPW6IHkrZ3GuMgDSE4g1L6KnmkWIbQ0sJ5402XPwUDrWefaaN3Ts1Os
      N2ssF0sEIO5sANdPAOUoh+fH6lrWz1Zk6bT2N5VJCHj58iUeP36M+/fvFzc5YF9KBzpyHlF7
      d7PF2vo655LtWKwys+UEtmgB9M4AnDlrhpIDw+9a1zQcyqXBR67KuyGEKEDiC/aTNDL02HdM
      1oKSTzTDspTTty9bIRm67Pq+7hD8uwntod8yMXRSn2BnZwe1r+DcMFrSqiutUa17uv6i0DVN
      t12MnYeU99dff8VyucSVK1dwfHyMly9f4u9//3vi/+iOpzV8DirKWmPnfbKDCKcVQkgm63iR
      jiX8wAXsCsFMSiWUtI5urKnWQQsTQymeARQ+YnoEeeq6Rlx2iWFjME8DDErj2fxeyTdItBrh
      2F5YpA8G4QhwBMEyq+S4nnJWNld3/LzsRZrTpvz99evXOD4+xmazwbNnzxBCuw0Kz5uwVQtd
      O0kcVC7MgYU5hBBjd3IwKVf2NmK4PV4q0BLOCw2HzuG83DMlH8F6TwuaFlbekS5uDz5hNFRX
      Lncg1ji6IXJpSTra0Q8hxHiY7mnzUGgOK7HSt+rA4quUhpVeKa2HDx/iiy++SGBJbr6ihTEd
      ljc2HxOBlTzkRB+x0DKsKyESuRn/xHo0NWbVDKAwxCZs8ZTIHOWgyxjlGqsXnHowlCekR6PG
      hLTErxzqLcOIWlhyuJOFyBrx6TFvHKeMjrY8I+8DGFi1XN6WEuH0NB/aD7HqQ9P//M//4IMP
      PigqJyuN+WxuRnxqa94qLTV40NixSDqNOtZR6zNVvo0Ubf2a6uJmgnmsOTKsxu3GGkt3HNYy
      Fg4eCIdLoU2JLMGOjrWx/jTXqS2e9XP92lY5GT3EUGctjIx3JSaJ7+ttP0qQMXdvU28wq4br
      dnPp1HUdY/y1L+ZcGzgok4RyXQ9p8jW5zifcO6qryJcrlwNo4Q6vZBPyrt2pcOuH5CXkUsdE
      Nm3ld3LaWeNBgBrb+yySYcGYAk8sZzp5p+tE2im2ypyDI/KsWBPxwuPQnRsGUuvloDJEqfmb
      zWaDeKUc/NGKJXb0ML7+l/m6fft23B5d57Gzs4PFYoEQ0hAR7R9NmRAU+dDOrkWJ7AW0c0XA
      4J2tHpDBjMhIC19rK6LXqFrTCumJH74un1aH09CD8+Zr/Fv+eNZWKr5pmjaOxMkWjMjCrpxm
      kiHX0OFYeXZsQUzJ+sk1vU3LGOXyarHy+BCpDG1eu3YN33zzDW7dujVoQ4nwTLS5En6ud+3L
      sZWES/cdTayyYYGlXiPa0PrYqVigZrPCuvGoN6u4er9NsEFdA7PZ9PUzWkNONacl4c+RNVIh
      WqIkECy4lunlTrOpNwgNbdYVEIO5OD3OP8cna1gHh2o2S4b2co2peWchkY26+J7UpwUlp/pA
      Vnl0Gx0eHuLGjRsDQQaQnNyohZ+f11ieowG0U2zxNAZ/Kzolh/NLOsDR4SF+Xjf49d8/4h9/
      /wJvzwLC2VssLi/x8LsX+Pize3j55i2OXx1id1Zhc+U2lus3uHrtJn59/hKffP4J9KI8jaVz
      ziwzzc9r2MNp5jSUCb8yfHFFWRXaOtj9Im3nnDlEamnoXCcAWsvnna31GRJY5bTqT84Jc85F
      SzDwwwp1XyId2s1l9t7j5cuX+Pzzz9NRHqNe5B7DUcu3KUHgXHuVYqj4oBWZS6i6PJRK93Cb
      Iyz2DvDrL0/x9TcP4GZLrI6PcevOLfz8/ff4f7/6GleuXsON69ewWDj8+/sf8M03P+Hq7hKn
      IxVZKqRl1kva33ImdUXltL9zLgn11WkwP0AL3WT0oKqqGNLM6Vll5HTajtTBAOeywp9LR+cn
      wmctK5VzfpOVVrA7Duenwzp0+SyY8vz5c9y+fXug6HjdcKkzM/WDAcN6kO9Sh5bvVVKg7EPJ
      wv6madJ9gZq63VMfziHUG2wah+WiHTsFPJp6jdNVjZ1FhQYOm02N0NRYLJaYVR6oKviOobF9
      gaweLH9Wo+b24WGyKlrPBspzEdMXGkQ3Kqct71kTOHy/CU2ETvrPCpdg3nP8WPWa5Nk08Rgn
      4TEXJiGCoPPkRSRxEkr5Ws45fP/99/jss8+K9SE8WZ2RN0CWbe4lbyvGiuGQtuJC1ryCzjfy
      E0oS8I5kdYAcbJFe3dT9dueehGMKnGFih9LC81wppRVZ/JkrI6cH9CNNWns755Jjn7Lp0oCA
      lf4UvoAesrBTnMPQOcXC1okVk5Ascnn8+DGOj49x48aNuD+RVm7cyVgBNCEA1L4s5EmbO4e6
      Fog3DIXg+iqV1VIyFzIRFlQh+bOf6ABmPt3G4l37JjfsbDYb+A9W2iXh0tqEibVn26DppJuE
      RzShG8Wg4b5kFAftyJBzLometepuysAA0GruqqrigX6shPR8gRZQq/zyrtTF6ekpDg4OsFwu
      8e233+If//hH8p7Fu3pgYFH4PVFmASGOTOXKPdU66vsXcj5ASaDPgxEtspwoS0i1NsthaytN
      nS6XRxaP6x2vZBcC0aQ+eFMAJT8HwHWRjIyDmxDQdDFKnZ6A997cYJbTYyESAY+wgyCN1Inw
      ZXUAjqfS8Eqe393dHQgwCx2Hb8g9GVmTPOL76Hnf3d3F6dkpHOzDw5M6dMONF7TW59+bzWZ7
      HaAkZNqpshicitHHOoy1bygwxKo5aJLruPG6rmjXC7/W1Nb6hORdxSPQ+mUyiy71I0f+jHUA
      qUNZt7BarWJHsHaR0065rl/vfQKrpBP9/PPP+PLLL0frTFs9h3YxE3fGtk6B3d1dLJdLLBYL
      rNarfgjaKPcUawj0/iDzcSGnRFrmKTdkplfujKU9lRI8roRdL8DmitYdlP0V3o1YC3xOG+oy
      6DwGjp0Ml/oq7tGjQ0hKZRaNHUKIQ6W5TcssjAz0FnSxWMTQZrn//PnzdpsTeq9UZp2f1B3n
      tbOzE/ddcs5hMV/g7OxsUF+WP6l/s9VprWi688RW1wTncJmGAKzpc4JiYm8M1x2USAup1sjs
      lzDuFx6891itV+imwOKiDD5cT1MOe1q/rTpg7Otcl6exoZ/lSMo7snBnNpuZe/wwP1rw2Wc5
      PT0dzD4fHBzgm2++iZ3Agooahun2TJSNA85WZ1it11jM51hv1jg7WyULcvR7+jrfF0VV+Soe
      Dcvvbn1RfGSkgNGnvKvxc4BcKw+1coWL9hPHEOgjBDVpgQK6jhF3LeuJD4XjfHVZcqTrJNdp
      AAwCCvlTQ8b1ZhPPXpb9isw01fXlchnTsrZ40eVcLBYDeBPbKBM4yGVwznXj++kRpk3ToFk1
      cdyey1tVFfb29lDXdeyYVnt7X3X+1VDBhHABwXBjwg4MNXxOaKLwS+GcPeZsQRH5FBMuWtF5
      nzQK862dc55Ykk4gkYabegM5sXJKoJZOfypZGwaMTVwBfWyWNTnIkEDSPDs7Sw7L0wIkdXx2
      dobXarMueUe3j4UEYmfvwkq4w+RkJ4SA9WaNK1euoKoq7Ozs4NWrV6ibBpWGlMBgQpCt2lYX
      xXNDlxw2C+IAqSbkSZGS4IzNruqKyGlqDX9E0JLnQz/642hTqdJCEP7M0VjnyT2vfQn+vV6v
      sbu7i/V6nWxMMJu1B4LXdR07h0SaWj4K5xNCwOvXr/HRRx8N+MrxlCtHW5+IBl3XlVZGUgZx
      zC9duoTXb14Pym/5djw5eiHrAUom3WpQK4BLm05NgtHHIEfJL+FntDn3VYV+EylECBZgjyBx
      R7PSfxcqhTaUBFXyF+Hf1Jso5NawofhKbA0t7RlCiMcfHRwcmJZIO7g6Nl/zzQozh/clzOPF
      ixfY2d3BznKnHe3yw817hazFS8AFnhQv30tT8qXfJezK90pWoiT0Fr9RABCw8D4uVmlvxkQA
      Q/ByEGwKlSwilzn3XI42m1bw27W4PkIUa4WahlYly8MWhfG3pQCsQEIrzZJfxGmfnpzi+PgE
      3rvElytZG6YLOSneuda7t7ApYI/VR6YdklEPXQFTC6qfs+AI+wDxObLLIYRUgzlAbyWYM/k5
      XjTvnIYuD2tf1obWUa3Mr/BoLQpyLp0T0HCzxKd8H6xKC+0GVdJ2WhP/HrIUo8b9fE/7d3wP
      2Oa2KLzkrdszpw1FdcluwEOBQ5xcCgBcJ386ACpHY/hfvudWHOnvIuzSSbWWsUzrmFbWMMYa
      ndBlkrzY2dQrwjjdOGCAfvyb3y11WudcXGPN1zSUFbiiBfzFixd4/fo1lsslDq5fx85yObnt
      SoogV6/Ws1pB5iDo1oLhHj9+PMDvbY7piqPBHIBDUvEsYDpAbkql5kzpFCGNncT14dAcPpDz
      ObSglUgrglyZtLAy/6KxWVDlTwRUeJLfOYUStXjTJKu4LF6Eh+PjYzx8+BCXL1/G0dERrl69
      iuvXr2Oz2eDw8BAnpyf46+d/zZad0yyFO+i2tHiR53RdyTVdpq11gEePHplC5r1vt8RuQh/z
      wUNfQBy3zU3N5yohx8sA0xuaTPKGUZEydyDPLxYLrFarbJ7n6QDnISvMl3mVTqAD22TIN8Yl
      8WRgaNDU0tH7bVhKwXGcJ9PJ6Qnms3kst/yt12s8fPgQn332WbZs2opZUEvua23OHSdn0biO
      WA4uJBrUOac2oOr3vmnvAejuy8LwKYJjVVYJu8bCyyRaIJwvLoek5/qw6lJ8eanMFq/y3TL1
      57FoVkPLfb7GlkzPhEc+euNsQiQrfyvPneVO3ErR0fOz2Qw3btzAw4cP8Ze//MVUDjmFMVXZ
      acijrzNJLFXTbLkDcOZxxCF0O0EwYwJ9fLpj8ZhJlHhyPU1uRTcyTGhv9oc9O7j2/Fvhtari
      mgQWBEl/tVrFALOpGj7XcZjHMU1rCQwTl1VrVPldNw2c630Z2RyMFUSuY1nCKJ85qCn3r169
      CgB4/Phx3D1Cv58r1xQqWWOtZGZVu3OGw5Y7AFd+SXOKWdYrjgSr6vTkO5QTxqHDrVIPcCGd
      GgegIFfnUFIEp/CkBS7XwFZ5rPshhCRsQv/9kcQNnuSH/CAA81kqf2kkRzvF8i4AXL9+HQ8e
      PBjV8pZFt2BNrkPq6xI3xltJyuDAVjtA4rQiDxtcx5jehhzOAWqNMOM3EajQPSqQBgFRszMJ
      DJPKS2ZoXT4cOCfMVnnGOoavfByWnDokOKVzsECw45sT5BKMyhFbWBb0nFLTO2Y3Iz6FzodJ
      Y/yckjHvOcTD/4BuNLKTg+3NA3gPhH7cPBcUFVfrU5hvHAUCkjMGGNoIlBKtBnnWpRpea9ic
      eS9pYn3N0nK6bPJppT3WiO9CGkLk8DuT5mGq496EBqHu20/e4UUzEVqC0lah7mOdIVc3FnTK
      Pe9c6+vxtumc9xZDIfrF4BbxwvT0RbRH+QDJPjxNSNek6nWhEtgmnYKJIVAuZl+TNarAVien
      WSPWpngTTmcMx+fSG7NGFg2g30h52YKU+AxNp9i8fU7v4Exo1+XtXJKXPNeExozI1WWxlJdu
      mxyc0r+33gEEhpjkbAfXgTzR7jmtKXLaPDdHoAW4BDu0BixpKImrtxaV100dBUN3uinEjclw
      I9fAWnDHBFkrDi3A/Ky+FzcHdjyUjcGObTof5kvHA011gHPWvKQUtOLQFmMmX857anqJpOHN
      ArneHE2BAFJgK0DKEqpcDBBXgIY+8p35HzO/6/U67p/P1Gq2GRplJaZCHS2QjOX16Bany9o+
      l6fuADn4wEpEXxdIIek0dROXSWq/QPMcQmjXDpAf5lwbGTB1+WsJOpXaUjvTkc/Q0h+GRSXx
      w8NDEwJYSx61cOcEVkgqS4ZBk7wBzGgoVTaLHeO3pCktHnR5dHr8vr4uZciRpeWSGXMAWXvi
      kI3DZ2XCfOi6zgmZtkIhtBaA87OU1PPnzxFCwK1bt7KdsDEGO6Tjy95B3rcbB/vuiNf24MLO
      mrh+hItDRgKCCa/m8zkODg4ubl8gviefUsDcPi5TNJoO3NLwB0gFKid4Y9hcx91MiZS0cDsL
      kc7T8hOS9xTckGsO7RbkJ6cnyTbxVnqaL82f1dGlvKHNdPB8TK/bvkTPJ3jv8fz5c9R1jfff
      f9+sb+ZDFEvCm+s3xnXeoWn6QZBNvRkMslhtIROb6/Uay+US8/n8P3NABjAORSwtyhZj8B4N
      cep7U/H3eXRBSej5Ge7ofC1nUXK8OpeOqsT0mhAnEGezWeJ7jWHkMYik52wxeAAAGHtJREFU
      yxBCiKNsTQgD3M/QVqdz8+ZNfP/994mV0fkzv7ykki2W5FPNCDE0foAEhFi5Xrp0Cc45vHr1
      CpvNpoWx5lsXQLoSLM2sK9LCvXLNOoRaf/89xs7CxJq0I25p2Ry00MO38mxOSPj3zk4bgiCz
      uiVrluu4uWtN02BT1wDh/zh5mHHuSx1Z86Cfk7gloK0PaweLgeUa8R0EUr19+zb+Fli89RVh
      GttbDOZIa3M9GsIjLTltr52nUj5jAq6tE5M1SRdjjFzJQPeNlLOCmk/OEwDOzs4ApIvZS8R1
      lhPGRDERPxEKoqyYLLp+/Tp+/vln3Lt3L+FfKMJZ1x042K0RLlmmnMXPwWCBV0JbXRBj4d9k
      LD+zVtbS3jptppJwy33rGV7JxPnn0ih1INO36JLjOYtcnUgnKDnHkheAuM1JQIgnsKQH7PXp
      537rTqD9Lj5UME5OkiBxp58yq33t2jW8ffsWR0dH2N/fH/DV5uVognN8FE3ylnpji7FcLpN9
      jCxE8fuW54yQ7olJxpl4dI3zOR2dtn6nlL+VnhbE85ZrsViYQ6GaP76mo0vb8PDxZkj4dcDO
      7i7miwXms/ZgjM1mg4YP7i6s6hLS5TctjusyBOL2KrwPkm6bkiICgHv37uHp06cDhVDXdbtV
      YjebL/d4oMRal5DEb/k+nquqKly6dKkNWqRyaQd96z6AVKqeHRzgOBTwMX3Xv0ujOhqj6mfH
      BMQqiwixHPxWGmIdOG9qJIkSBjJ4nwXFe4/FYhH3yzw7PY33mD++Zs3U6ne4fAwtg/CAPpSa
      37M2L+B8LMUgws4QSybX5BQX1+2sIRNuLgzz0J1PJia5bt+8edP5FHUMdtRlvJBF8fKpQ5JL
      DS73cya8pPUBmJhap3HecnAZjo6ORnmQ79zYOQ1pwT8uQ93UWCwWWC6X8UDqnHLIwbqc4pHR
      FvFbQpANeh1mVRX379Rl1JDJKg/QTho+fvwYVVXhzZs3uH//fqLlAwK8WiYr5ddpaRL4Y8lN
      1PZqIT7/XdgxqbyhqoUZc3jUSiuXn9aYWiO+i+ALb9wYOcvhvcfOzk7cfUHzJ2ktl0us1+vB
      tu1W543vhnbLQDk0eorg5e6JgLfDmU0ydAr0HVVWwnFaWrOXoKnk9dNPP+HDDz/Eer3GjRs3
      IhqQ52WJLL/PS0+t35aSkTrRFlHnx/xvtQOMVY5+PidcUxwhSxuZ2s7gyyIrz1wlsrCcnZ0N
      nuOGkJlpPrjD8o2A4cIeLhPzw4GFnLdOJ6mvJiA4REedI3ElyE0fI8Wa06pbrjfm+/bt2/j3
      v/+NTz/9dPCchlU6D133/L5eK6I/ue65A4VunQhwQQdkCMPciFOG64TGnuP7WrC0JZDnrUrW
      /OoGqUnz8nS7JXycBtA39OmpfZKarp9S2fVoke6MvABe7qeQB/0QY/9iMlo1da1Cjrje9/f3
      Y+yUXvPBZc7BXwsW5SxyDjXE+nWACxewPbqliYH8uQH63fPCFd3TrYrVZlN3Eiu95J3u0zp3
      zBJeLqs+qol54DJzY1qWSp5L/APahlKXQfjoXqZhUhcPj87Vkc7TIut5bTFOTk6SY1yFJ21d
      clZFSI8E6edLSCE+F1KLuFULYGHcAbZVxIFxVm+2NDmPMHFeFlbOdQbNE79XNzVCHRJIEkJ6
      Wjnfs8jKv9ToluXSdST5cscJkJHLlm+ODYJz8VxjHWLAvGnINQUy5socAPz000+4f//+qOWf
      Kvw6nagImn6ll7bgWpbkna1ujisjCV5VZk7rakG1TKKlrbTQCllCaWl2nccArtXUaK4/31eg
      SDKsF8JgsU6pA06xhjod730MGUgEynWCzQIPe/MunbaV33qzhvdVXEub6wy89FJ3HtmORZ6z
      Ft5zPeh6sRSnOO5WOhIYx3s45coYwpaHQSVMlitcB7JpE1YSiJygayrBCOZB0rICrxiShBCi
      4PO9TV0jxNDsfv1rwHAOQD4tqMO8WB3EuXbS7ezsDHVTY7lYIoC2OnfdcGUBt1v1wPmaFNoj
      mkAhxdxuubTlucPDQxweHuJvf/vbsLOqZzWssxbqRAXVBQVai6Da/Vv7oV1dZm2xL+SADJ25
      NmE5xyWXlnW9lAYPgzHpoUpf+Ri/oytfr1ngMkSr4dPF9pbWtTArUJ6ka0KD1XoNdLydnp5i
      Z3cHjZqRzZHG2qVnk3J35WlHjMrLW4F2y5OdnR3cuHEDv/32G46Pj/Hll1/2ZzEoGWB+dDks
      OLupN3FCK9eB9fnGFqK4MB+AKYT+6NKSlteNNcXB4ftAapJFeFlY+72JWp+QnVtIhQGDxmCe
      ZJFG1NpuuH9pCePr+9w4dYyG7IcnIRsLODnt3N5AzBIwnX/JGvDzs2qW9UX0Oy9fvowd4dtv
      v4VzDp988ok56sPtIPsvWdaLr7URqYg+DFzv0FsDHzov733rywks6yzahYZDTxFmjdeZStrL
      EjQNYzi4K24PPsG/S7RHt5Wgc60ZZkc4p41znVoP33HH6h6ODcVpchSsxatVBxZfpTRKvOu0
      nHN4+PAh/vu//xvee9y4ccOEeRr+Nk0N150NzfBQw6HVeo2gfIlAsEy/y3yJ9aibenDW8NZ9
      AIt05Y05gfxcDmuK4PAIAJP2CcZgQInfeKJ9xrksaUr5rcsswsJBW6LppdH1O9qqWUJpvTem
      fMagklWef/7zn/j444+z7ZrjYTFfjNZZ3a1FiJZZ+G/6rd817/xcOxgTEEJ/HlzcFc9v8ZTI
      EELiiOhGsmDBWGPpCmYtkwz3qWdy+LJEnDfPtAJIYku4bFY5LJ7171gOJ05ciJGNmmf2QXhh
      h4VvdSCcLl/unmjLqUoihBDDm6023N3djWsW5D77VBzuwNqcd3J2ZDUFcjo33CjB4i2oXSi4
      /Ns/JA8pc3WydWGKQHKmGlCBYV3FxE2zRkY/WPCmPCu88PX+BxJLYwm0lZ6VvkRByqKZqtuT
      1Cq/jomR4440f7wJQEmbW864VaYxqusad+/excOHD3H37t1BHru7u3G9wmq1GuSjy6Wv6/Tk
      Ph+HZJFlMbmsQlvrADnTLdRaB+VodsJVgiyJhuswPIe5MjFmjflmBNu5dHiUJ/F6zNpu9gU3
      nHSZAnWEf3EABexL3pUfWjGLVykrj2KF0C6MkWNNp1Aur7G2k3tSlsuXL+Pp06eJAuOgtbOz
      s8iXNdHJdah9OfaXLJhnBcdxut57hNoehBhAoBACnj15jJu3P8DMTzN/OdLDhlNhh+75U/A6
      Qx2+NpvNigKhYZE2vQw7JPzYOdcHU7lhJ+L8c3yK5ZJ3BG5YEC1Xf9qayN48QBoibIWfn8cH
      0nyI4HOaz549w82bNweCDLSHZwhp4efnNTTmeCftFGuerPpJ8uhOJRJE4gk6JR3gxdOHmO1d
      wU8PvsaND/6Cs+Mz/HZyjMtLj2a2gzeHz3Dl+k0crzb4+N4HkypOC0jOmWWm+XkNezjNrHVR
      /oFFuUAxKw8ZPnNdpKSDj9AtJ7S5dNtrDs61615zDWtFOmremDabTawvgUGWj3VewZe0LQUj
      Gvbt27d4//33kyWmuZEq7kBa8Es8WpaFy1dqa6lnacsGTTw1PukA8/kcTw6fYh42+Prrf+Ho
      7RpnocFlHGP//bu4dXALRy8f4/vD48kdQBdePrWDZgmttiJWWvo7QyVr20J5RvLPVVySJo34
      uA6rs2WxNLblS0gMvuB8S/g5nVzZS5ZCsPZsNoun2GRXohHpEIXcTLbu2IeHh7hz507SnpaF
      ycVKcZ7CA58RoYVcRn74vZyC4Pu8tNKh9zOSDnD5xi3sXr2O1WqDe4t5d4Byg7YuOqG5fYB7
      n013knJkzXzKkJWcEiPMW5VmERdc1upas4FjFsRKjxs0t9jF+h0Q4ia/+kRJLTT8fs6n0c9a
      +epZ9qbJn2fGWJ7TsAYLLLj322+/4fbt20k+OdKwJ6BTQJ0o6PO7mg6ySASnc244cqLKLrwx
      FGO+9dGwF7YzXE7oREg5hl0vZzwPiyJYyQIIsjg8fl5aT8yfuTLKMyx41jNsPSycbOVtpS+/
      x2CMdFDtF1haOVcHOtJVC/d8Pof3Hk+fPsWLFy9w48YNXLt2zbTa1nwFWxMNfywovKk3AyXC
      xM/nYKVlMS9kIkwXUn8X5qpZNdjH/V3zk4ZtrVg9SOs82rVkjVh7xpGdTks556M1q5smTvtL
      PqmlAIJxloLOU7YSn4Ll67pOoJCGBMKHYGsWUF03/K7wfnp6iqtXr2J/fx/ffPMNrl+/nrw3
      1oa6nbXSi1ay23KRn9FUaj8rD6GtH5HEDFiVYS1yOA8NBCkjpFqbTcHWOTzP5UlOQXH9pwip
      3kJE3h8M9aLtMEHMvvAemniiiUwsNr7BfDYvCoNudBZ4UQh6na2uByFpI6m7+XwefSDnHE5P
      T7G7uxuftwTbgnjsqCdWv1uY77zD7t4uTk9O+8C8AvzlcloC34SASkHZra4HsJjUn6VGHFs9
      loMRJT5yGDfHS67S4/XQv8+TZCz4QjlHsGTOm7qJaTZNgHP2sK9OT+5LPH7TNHEhvvc+OR1e
      yArt0NCC5xokjydPnuCLL74YrTOuA0lfNDyHNCAAe3t7WC6XbX6rtTnen6u/HDV1HQcgLjQc
      2hIuhhXyzJgmz6U/hbTgJ45RJmTA0lzsr/Bz2nfR5ryUfs5XCiEMoJQEgpVIW5r5fB41rvBq
      +WQWRgZ6C7pYLOKCfrn/4sWLBPpweXOKQ5eft1dvmgY7uztYLpfx2fl8jrOzs6yFttJO69AB
      XV2y4thqLJA1jMaMaW2oP5ksTV833YiBy4866DR045d40I6qvLtarQC6JwFrJQti1YH126oD
      xr7OdQtBjA39LEdS3pFOK7u65epH3pd3xYeQDnBycjJQUgcHB/j222/x3nvvJe/rtETr6nqN
      vDuZ2W9njlerFRbzBdabdXssLS3I0WXVdcbphvYLKu/j2D8/f6FOcEnImSy8qLVaixHLwi9C
      K+8JNJFx/ICAelObQmFVsjRgrNiONnUN712yYqzklFl5DQQi8y4H4un3tGVab9Zt9GO3paFY
      AKue+Pru7m7U8hy/o9tC3pvP5wmsEF5yZbWc6qZp0KCB91V0peLok/MD+almVXswd1Pj5Phk
      MLkW29sYdEgUjMnlH0C9kxhGQ+61RsgJTSL8jta+KrKgiHzKZqntPpRtJ9IaX/60c76hTVal
      E8jkVl23Dcj4f6xuSmPmOeIQAa4TpmjiKUJWOnkS0qGEUZ6p6xpnZ2dJsJ0WIKnj4+NjvHnz
      xoSFY1aPhbqdZe9n2EsQOISA9WqNK5evtNtULnfaPf/rDSpXmW3OSoXvb60DyJ7yXFkWWSZR
      iJmWlVIO5YjOkvAlJlmtHShBkijwNJrkBFfGIU8HGQYqLQThzxyVOo+lWa0yaAFcr9fY3d2N
      UaRt+DVQzWaYVVU8MII7g+WjcD4hBBwfH+O//uu/BmXK8SRkPi94nZ7RvhvQjhJ52glkNpvh
      0qVLePX6tckj14coDLm/xVMip5l0SxisAK4QhrstMGl8n6OcwGvtxYLG8fGRH0hgnK3tGCpY
      6b8L5bb5lu8ljRtCiJtTrdfruDhk3aywRhptqYPWmHc9j3Hz5k18++23uH79ummJWHDjxJvr
      Zzo036wwNaSStLzzaOoaz1+8wM5yGbejrLw9gWop4e13AMpIO5IWWR68TsdKW1egji8vpTHm
      cEcBgBF/HmIiidZivjjP8wh9ySJyHeaey5Fo+VaZ5PdfYqg5xieAuAV5Dlpx2gxzcm3Kz1vl
      j39oDwc5OTkZbIMypa2BbQ+DOtAk0TD0WMgaqxeMrSGPFvqSWR3w01Eye6tmRLVA9Fx0sSm8
      usj1gW1WZyxZK02WZtflsephLDCP44Dkuw441IMAJeHXsBDoIlG7+gC6GXFarJRYkHe0fjp/
      IamDXGfS/h3fA7bYAfSSt4B+mwredNUSuBCGe7pwPE2JxvC/Fnx9n38DiHxs6hrOAZ6G0izY
      NUUra2Fnnqz3GZqw02t1GP4u9Z78VpjYgk3Oubjgh69ZUFZDFe89fvnlFxwdHcE5h5s3b2J/
      f39y21nOasl3yimNkjJJ+A/nsaETKYSAR48fRe2f4GHn4jm+3CgyXiuzqQDaXYppJEPH5Eyp
      1JxgTxHS2LAOcTiRtWkufy1oJdKKIJemJbDccfQYu/xxp+HfYwolhDCIztS8SP5nZ2f48ccf
      sVgscHp6itu3b+Pq1atwzuHp06d48+YN/va3v2XLzmmW4vp1W1q8yHNWB5K6kvID2+wAjx6Z
      QhYFKIR2lEjt4CWAwzJtGqLw9THNz9+1cPaOLQbOu/DBvCwWixhgZtF5OsB5SC8a143Oq8BY
      CGQiTMqQTAaGBnXdAAiQGWcpg1CpbvVv51yyOEf4+f7779uDMTKkrZgFteS+1ubccSwYOrCK
      oT9k/UImwpxzcdQEQLL3TXsPQNcRKgOT5siqrNIETB0FU7bXQxyqTXjt0vWVT1ZtMaQ7LxTT
      8MQy9eexaFZDy31dFh4+tkLN25+tc5qDEDr/XJ6bzSYJ2Rde79y5gx9//BEfffSRqRxyCmOq
      ssvxa1roIOHwW+4AnHlciCD4nvkS6NNpW36/ZBIlEpOnyYHCwRKCsSVbhg3ofLiAgabUWpfH
      0qdqeBZcfT2Hx/kZqQ99jYm1IZebh4/rpoFzfZ3JxgKsHXMdyxJG+Uw6BoYdUQ6p/vnnn+Pu
      Efr9XLmmUMkaA+nw7ayadY77ljsAN25OAIQp7z185QkaAQj5tbEhtJNQvCNEQLuTc3ymW7zO
      Wh2AglzdRIvrTxgUnrTAWb6ERdps8zsSjclCP0Xzn5ckvcGseFdvY1i7VP7SRKQVWCi/r1y5
      Mlgoxff1b60AtaXMdUidZgghznvEDo1W6W53d2h2WmELf3zOAfVmuI+kHmGI6XV/7d46vfZO
      oIUaSWL/gh0hxvpTfA5+x7qeI85DOv0UmtI5WCDY8c3xWIJROWILO/aeVXdNyA8cWPmUeM4p
      mRwvNcmRrK/YejQoj5sPhFFwtmjwpl8Iws+yCZPvLYZrhZ5TbrozZvl9rWFN8w4k4/ma9LVc
      +DSXTT4tiDPWiO9CGkJYZcnh6SnvMkkYhVhNeYcXzXDdRkjU9HxYHTBXJk0WdNLpavThqUPy
      va11AAtPMvFGp30J5KM1T7KYPCBdcO26bUU47YY0uuUIcYfTncGqaGtUga1ODiJErE2L8QF7
      HcJYJ0pgW8YajUFLnUapvGxBSnxGheXaVVscGitWLlpV7vxSN017or08JyNUJcopMstH0QpI
      887pXZgTnN5oP8aW4vECBqvwDGEETFhalytpbNcCTr+koWQfemvlW93UiZM8JUZJ8yF/0vH5
      mvUsMDwbOSfIieKgBet8z3JKnXNxO0dtOSzLasHJtk0b0w8bs4Y5OchBJs7XKk8InRMcQh/3
      /UdRCaOxZppaaGu3AX5GP5+jXH66Ma0KY0qiKlU6VVXFLdTl2lSoYzUWj+8zj/yMpe1L2k+X
      mYmtnxYY53qN75xDUzfx9EdrmxetjXeWOzESN1oJX01e/lpCFRaJEsnx5UJLXck3+PfPT/Bf
      H94bjeEfo2fPnpkQgBsx59RowdEF5skMS5vwwcu8WWyOdB4WHxasYqHU6fH7+jqAODY/eBdI
      hi3lk7F1KX1RFppXYHjEqLyjsXEOn2srFEKI63n1AAPn/eLFC6xWK9y9ezcriHqwQwRXrA6A
      7lRLB9/Brrqp+86KVNb6CIP+HAGm+XyO69evpzPBz5/8jGdvV9icvMGdD/6CFy9eY73+DTdv
      3sHbt7/h8qUdHJ01+PSje4MEdUVZw11cYCkgYMfw6w7C7/IzMcSWrlmmkgXJojFsrjF8boE7
      p2fhdi1sJb51WYH+EL6YVjept7O7g5OTk8G+OaUwBkv4rY4u5Q3dli+cb5Jep3y0/+e9x6tX
      r3BycoI7d+6Y9a1hmAXNYnt6j9AdwOjQH4yXI3lXDio/OzvDYrHAYrFIF5fuXr6M9etfUe1d
      wcmbl/jn//N/A7tX8fbFU/zzf/6F31Ye+8vf5zZYgqkFJBdKYDVU7BywNYtOo0TvClU4H55t
      ba1U20GbIH+2VSsJP9/3qu5kLmRWzTCfzZP8rWFj/cfpW2UKIURN29QNdfwhf7IBLZdFynNw
      cIDT09OBArQC9OK9blRPn8LjXTuZVcWyZkLskW60tr+/Hxfb13XdBuyxBZja+GMCVbIA/IyO
      WbHymaK929ViNUKI/nXyXqWC73JlGsOgzKOVTnKEj2HpJB1NoWNcH/IxxlPotl3c2dlJ8rGU
      hi5LzFfzocraNE1c3ZekC2BWCEO2rn333Xf4+OOPi89K3JIQCz/zl8DJkT1gxVdjiCd5/H+M
      s1/JxamytAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Listing Availability with price density' width='192'>
      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
      lyAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='No smoking count' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADWElEQVR4nO3XsUojURTH4TPBxGYQJI2ggugb+AC+vrWFIIpgIYomItFCScid7bbaanUx
      y//7umnuuc1vLqcbhmEoCDX66QvATxIA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0A
      RBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBN
      AEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQ
      TQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQB
      EE0ARBMA0QRANAEQTQBEEwDRBEA0ARBt66cvAH8yn89rNptVa60+Pz/r9PS0zs/Pq+/7enx8
      rIODg5rNZnV2dlaj0d//x70AbKTpdFqttVoul9V1XVVV7e3t1Wg0qvf393p+fq7lclnr9fpL
      cwTARnp6eqqbm5vquq5aa3V7e1uXl5c1DEPt7OzU7u7u7zC+ohuGYfiG+8I/MwxDrVarmkwm
      3362F4CNc3FxUVdXV7+/u66ryWRS6/W63t7eaj6ff9ssSzAb5/7+vra3t+vl5aW2traqtVat
      ter7vh4eHqrv+zo8PKyu6+r6+rpOTk7q+Pj4r2YJgI0zHo9rvV7XdDqt19fXWiwWNQxDtdbq
      4+Oj+r6v1WpVi8Wijo6OvrQI2wH4L93d3dX+/n6Nx+MvnSMAolmCiSYAogmAaAIgmgCIJgCi
      CYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYA
      ogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgm
      AKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCI
      JgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoA
      iCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCi/QJVeIzx
      XaBh1wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Price Analysis by room type review n price' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAC5klEQVR4nO3XMUpsWxBA0Xr6BQMNVHBgTtlJGAgmggjdYNDebmn1vuzP4CG410pPUsmm
      Tv1Z13UdiDr56QHgJwmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A/Grb7Xbu7+/neDzO5+fnHI/H/9/WdZ0/67qu
      Pzgf/FMPDw/z9vY2u91urq6u5vv7e25vb+f5+XmOx6MA+N0eHx/n9PR0Pj4+5vr6ejabzby+
      vs52u53z83MB0OYG4Nf7/v6el5eXORwOs9lsZmbm/f19Pj8/578fng3+ud1uNw8PD7MsyxwO
      h7m7u5unp6e5uLiwAfj9lmWZdV3n8vJyvr6+ZlmWOTs7m+126wbg99vv9/P6+jo3Nzez3+9n
      WZY5Pz+fk5MTAdDmC0SaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmAtL9kDYQqHBJYuAAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Price Density' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue Potential per neighbourhood and year ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Review n rating analysis with cancelation policy' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAb4ElEQVR4nO2daXBc13Xn//dt3a9f72gAjZ0kKHERSVGUSGuxJSqiLE0sycuM4qmUXBk7
      M4nLkeNUpuzJUsmHJE4Ux56a8iQZpzIziWbGnvFI423ssiyJiizJi0RJJE2KO0EABECgN/T+
      ut9286EJkCAAooFeXr/lV8UqAmh0H9x3/3c559x7CKWUwsXFoTBmG+DiYiauAFwcjSsAF0fj
      CsDF0bgCcHE0rgBcHI0rABdHw5ltQD0shCooANXQUdU1qIYOzdBhgMKgFAQEDCHgGAYcYeFh
      WXhYDgQEAEAIMfEvsCYL7S5XVcykcphKZJHOlZDOlVAsV1FVNVQVDYQAHp6DzyvA7/MgGpTQ
      Gw2gPxbCYE8YDEM6tv07UgCUUqiGjrxaQV6poKhWUdIUVDQVBtYXt/OyHEROQID3Ish7EBC8
      EFm+Yx+ImVBKUVU1nL40i2Pnp3HiwjTOTSYxncxC040NvSfPsRgdiGH7pl7ctqUPd24fwpaB
      GFimMxYfpBMiwZRSUAA5RUa6UkK6WkJRrbbs87wsh6hHQpdXQtQjgSWdO0K1GkopckUZr7xz
      Hq++cw5HTk+iWG5d2wNATySAe/dsxkN3bcP7dm2CV+BMa39TBUApRVGtYqacQ0IuQDH0ttvA
      EoIurx9xMYgurwTGIUKoKhpeP3YB3371OH52chyq1v62B4Cg5MVDd92Kjz64F7dvHQDDtLf9
      TRGAQSnm5DymS1nklEq7P35VvCyHPl8Ig1IYPMPablaglCKdK+G5w0fx/CtHkZgvmm3SEm4Z
      6savfvAufOj9t0H0CG35zLYKQDcMTJezmCzOo6pr7frYdcMSggEpjCF/BF6WN9uchqGUIpUt
      4R9/8HM8d/go5Kpqtkk3pSsk4dc+9D7864fvhOhpbfu3RQALI/5YPoVKB3f8G2EJwaAUwUgg
      Cp5hzTZnQ8hVFc/+4Of4h++/iXJFMducddETCeDf/+ov4ZF7drRs09xSAVBKkVcrOJudQ6GF
      m9pWIzAsRoMx9PlCllkWGQbFj4+exzPPvoSZVM5scxpiz9YB/OEnP4gdm+JNb/+WCUAzdFzM
      pzBVyrbi7U0hIojYHonDx7VnfbpRktkinnn2Rbz05pl1Oo07F55j8anH78G/+/C98AjN8943
      XQCUUhTUKk5mZiDrnb3W3AgsYbA11I2BDpwNKKX4yS/G8Ed/932ksiWzzWkJ2zf14i+f/jA2
      93U1pf2bKgBKKaZKWZzPJWwz8qxGrxjA9nAcXIcEdDTdwNe+9Tr+/js/hWF+aKeliB4ef/Ib
      H8Ijd+9oWARNE4BODZzNzuFKOd+Mt7MEft6DPdEBiJy5nqJiuYrf/y/fw6vvnDfVjnZCCPDJ
      x+7G5z5+EEwDg1BTBKDoGk5kZpBV5EbfynIIDIvbuwYQFERTPn82ncdnv/wczkzMmfL5ZvPI
      3TvwxU8/vuF9QcMCqOoajqYuo6RZy8XWTFjCYHe0H11eqa2fOzadwme//Bwm5+bb+rmdxn17
      tuArn/soJNGz7t9tSAAVXcXR1GWUNfttdtcLQwj2RAfaJoKx6RR+4y/+N+YyhbZ8Xqez99ZB
      /O0XfgUBn3ddv7fhxVNt5J9yO/9VDEpxIjONdKX13pepRBaf+dI33c5/HcfOTeF3/9O3UFXW
      F2jdkABUQ8ex9BTKDl72rIROKU5kZpBvYX7TfKGMz33leUwnrR3cagU/PzmOz//nb0M36k/d
      XrcADErxXuZKS9OVrYxODfwiPQ25BTNjRVHx+a9+B+cuJ5r+3nbhn945j698/RXUu7JflwAo
      pbiQSyJdtWeQpVlUDQ0nMtPQ1jESrYVhUHzl66/gzffGm/aeduV//vAtfPe1E3WJoG4BUEox
      JxdwueRsj0O9FNQqzuXm6h6J1uL/v3EC33z53aa8lxP44j+8gPOXk2u+rm4ByLqKM1ln+po3
      ypVyHrNNCAxenE7hmf/xUtPE5AQqiob/8NffXXNTXJcADEpxen4WOm3elO4UzucTDe0HFFXD
      n/33F1p+TNGOXJhK4stfP3zTgWNNAdTye+YdGeVtBqph4GwDS6H/89I7ePv0ZJOtcg7/9/C7
      OHpuatWfrymAqq5hLJ9uqlFOI10pYU5ev89+KpHF1771Rgsscg6GQfHn//gjKOrKS6GbCoBS
      iov5pLv0aQIX80lo6zj0bxgUX/3mqyi4S5+GOTuRwPOvHFvxZzcVQF6tYHYDI5fLciq6hsli
      /R604+en8OJbZ1pokbP42//3GvKl5QHKVQWw4PN3aR6X67wMwDAo/ub516Fv8DIql+XkihU8
      +4M3l+3FVhVAVpHdjW+T0aiBqTpmgXfOTOKtUxNtsMhZfONHbyN3wyywogAopZgoZNpilNOY
      Lueg3mQvQCnF/3rhiOvzbwFFuYrnDx9d8r0VBVDWFDfdoUWohn7T4NjYdBqvH7vYRoucxTde
      fHuJR2iZABbO9bq0julSdtVzu9/+8XHTril0Asn5Il47emHx6+UCAN2Qz9qlfkqagtwK+6ty
      RcEPf/qeCRY5i+cOH11cYi4TQKpSuuka1aU5rLQMOnJ6suPu67Qjb56aQCZfBnCDABYyPl1a
      T6pSWnZw46U3T5tkjbPQdQMvv3UWwA0CMECRrrgjUDtQDG3JMqhcUfDG8TETLXIWLx85A0rp
      UgHklQp01/3WNjLV8uL/T4/PIp1zPW/t4sipSVQUdakA2nGg2+UamWppcTN2xA18tRXdMHD0
      7NQ1AVBKV/RMuLSOkqYsOhwuz7mu53Zz5PTkdQJALfnNpX0YV0tEAVgxUcultZy8OHNNACW1
      avtLVTuRglqFqumOvdrQTE5dmr1WJrWouXnnZlBQK0grnLsBNoF8qXJNAO4lV+YgayquzOfc
      9AeTWBRAKy5yclmbiq4iPeuO/mbBAFcrhFuoeJ2d0KiB6bR7zaFZLG6CzShS7VLzBCWybvqJ
      WSwKwCoJcLqm46cvvoKpS+OQS2WoigpN05BNZzB+9jzKhSKmxydQLpYsc6gkle/8JZBH4CB5
      BfAcC8krgCEEWwa6IHp4eHgOHp6DV6j9G4lHIXAsBL7zS8su7gGscvODrmtgGAZysYTvvfAN
      7Ny3F6VCAaGuLpTyeaTnEijmC0jOzOKxT3wcXtGcyi3roVztfAfE7VsHIIkCKAVUTYfo4aFo
      OraN9ELVdGiaAd0wEAv7kS2UcduWPpQrCl59t7PLNi0KwCoxAF4QcNtdd8AwDOw+cBdC0Qji
      Q4NgORYJAJGeGECBaHcMHNe8cpqtRFY63wFxdmIOFADHMtjU14WL0yn0x0KYuJIGz7FIzhcR
      CfpwJZ0HzzKorPOefrOwRg+5DkIIAuEQACAUjSz5WbSne/H/vYP9bbWrEaxw+8P1h8kXculn
      0/lVX2MVFgVAQEAtUNx09vI0WJZFJpmE1+dDJpHE0OhmCF4PLpw4he7+PmRTaQTCIfAeDwY2
      DZtt8poIvDXGoZF4BIVyFUO9ERTKFcTCfrw3dgUcyyAalKBqOrwCB9EjgILi5MUrZpu8Joub
      YKbDij6vRizeA1kug+N5lPJ5FLI5lPIFSH4/ApEwwl1RiH4JU2PjKOWt4V2RvJ1deX6BuUwB
      Pq+AckVBV1ACxzAYiUeRK1ZACMGmvigk0YPJuXlkcuW137ADWBx6eIaxxFQ8e3kac5dn4PNL
      8Hg98PklVMoyxk6fRSGbg1wqg+M4xIcHoa1yH2SnERTXV9jNLIZ6IwhJIkCAVK6EnogfJVnB
      QHcIm/qimJzNICh54RcFzFikhNOiADiGBSwQDBvcsgmDWzYt+Z6qKOB4vuGq4WZAAHSH/Gab
      URc3Fpy4NJMGzzFQNcOyNcsYoLax9DDWWIeuBC8Iluz8QK3GcF9X0GwzNoyqdf6q4WYs7gG8
      HG+mHY6FZ1gMxsJmm+FYFod9nysAUxA5Hr3xgNlmOJbFGUDi1l9m3qVxJM6D7kgAAZ/b/u2G
      Ycg1Afh59wGYQUDwICh5MdgTWfvFLk1lJB69JgCBYeFhrbsRtioBvuYC3TLQZbIlzmPXaP81
      ARBCEBI6P3HMTggMC5Gt7b387hKo7ezbNrj0XqCIK4C2EhREsEztEewetU7ukl24a8fwUgHE
      RGsEZOxCzCst/n//zhFwbN11y10apC8WXLoHAAAPw0HirJGXYnUICKIe3+LX8WgQ20Z6TbTI
      WRzcdwsIIUsFQAhBt+j6pNtBUPDAy16LvTAMwaH920y0yFk8fGA7gBXqA8RF64blrUSvGFyW
      vvHQ/m3uMqgNdEf82Ld9CMAKAvBxvOsNajEsIehZYaYd6Yvizu2df37B6jzxgd2LzodlAiCE
      YEAKtd0oJ9HtDawYc2EIwccevN0Ei5wDyzD42IN7F79ecb7tEQMQmM4/0W9VBqTVk98O7rvF
      0tmhnc59t2/BUM+19l9RACxhMCi5oflWEBZEhITVD8D4vAKefOiONlrkLH7tlw8s2XutuuMa
      9IfBEXdD1mw2BbrWPLvw5EN3IBr03fQ1LuvnjlsHsX/nyJLvrdrDeYbFcCDacqOcRFgQl/j+
      V31dwIenHt3fBoucxdNP3r9s8LnpED8kRSx9UqyTIABGg7G6T659/OE73b1AE7l3z+Zloz+w
      hgA4hsFoKNYyo5xErxhcl3s5KHnx9JMPtNAi58BzLD7/1KEVB581F/lxMYiwGxdoCJ5h1zX6
      L/DL9+7E/p1uXKBRnnp0P0YHVh7I1xQAIQTbw72WuTeoExkNxjZ05prjWPzBv3kEosc9rrpR
      huMR/OZH71t18KnLzePjBIwGu9d+ocsyYl4Jfb6NBxa3DnbjM//yA020yDlwLIM//vV/AUlc
      /axFXQIghGBICqPLI639YpdFPCyHbaHGZ8+nHt2P+/ZsaZJVzuFTj9+DAytsfK+nbkc/IQQ7
      I3F43WOTdUFAsCMcb8p1MxzH4k9/8zHXK7QODuwcwac/9v41913rinQJLIfd0X6w7n5gTUaD
      MXR5mzdjdkf8eOa3PuzuB+og3hXEM7/1BHhu7XSedYd6g4KIHeE4XAmszoAvhGF/81NJ9m0f
      wh9+8hEwjNv6q+EXPfjq7/4rdEfqO9eyoVyHHjGArSF3U7wS3V4/bg33tOyqxic+sBufffIB
      uJPwcjw8h7/67Y9gx+Z43b+zIQHUNsURjAbdINn1RD0+7IzEwbQwh4oQgk89fg9+/fF7W/YZ
      VkTgWfzFZ55Yt7Ngw0+KEIIRf9QVwVW6PBJ2R/trt2y3GIYhePpX7scnH7vbnQlQG/m/+OnH
      cejAtnXPvIQ2WEqRUoqpUhbncwkL1JdpDb1iANvDvcs6P6UUimGgpCrIVRUUFAUlVYWsaVB0
      Haqhg1LAAAVLCDiGgYfl4OVYSDyPgCAgLHjg43l4WHbZwzUMiv/2vZ/ir597zTI13pqN6OHx
      pac/ggf2bd3QsrNhAQC1B52sFHFqftYy1SabxbA/gtFgNxhCQClFWdMwWyphrlTCXLmMglKF
      YjTWJjzDICAI6BZF9EoS4pKEAF+7Ep5Sim+/ehx//uyLqFqkMF2z6A778R9/52PYe+vght+j
      KQJYIK9UcDIzA1nv/KqHjcIQgm2hXsR9QeSrVYzn85jI55CpVKC3eDRmAIS9XowEg9gcDCHs
      9eKd05P4vb/5LhLzxZZ+dqdw25Y+fOmzH8Fwb2PetqYKAAAUXceZ7CySFfs+CB8nYDTQjbRc
      xfnsPJLlsmnLPwIg6vViayQCSWXwZ//1hzhyetIka1oPIcBH7t+DL3zi4aZcJ9l0AQC1JdF0
      KYsL+ZStlkQEQIAXoWosxrJZVHTdbJOWILAsBkQJR352Ac//6F1ULVIjrV66QhK+8IlDePTu
      nU2LhbREAAuUNQXnsgmkq6VWfUTbMAygrADzsgKtwzecLCEop8v4/vePYmo6Y7Y5DUNI7SKr
      Lzx1CL1NTgdpqQCA2myQkAsYK6RQ1qy3NzAoRa6io1AxWr62bzaGbuDEsUm89cY5lMuK2eZs
      iC0DMXzu4wdxcN8tLYmAt1wAC+iGgWSliNly3hIzAk84zMsqclUNigXKx96McqmKqbEkxt67
      grOX5sw2Z01YhsED+7bi0Xt24uC+rRA9rbuvtm0CWIBSioJawXQph1k531H+awIgLPggMAJO
      peaRV6w5aq6GyHIgqSpe+KcTOH5uuqPaHgA8AocP7B3Fv33iXuzcHG9L5c+2C2CBWpBIx2w5
      jzk5j4JaNcMMALVbsXt8AcTFIC7l8nh3bs5yy516IQB2dcXgk4Hv/Pg4Xn7rLDJ5c6u6D3SH
      8dGDe/DY+3ehPxZqa8lb0wRwPZRSlDQFSbmAVKWEgloFbbFjUWR5RL0Sur1+hAURmmHgjelp
      XMpbs+DzeumX/Dg4NARDNfCTX4zh8JGzePv0JJLZ1ruvGULQFwvi/ju24pG7d2DXln54BHPO
      mXSEAK6HUoqqoSGvVJBTZBSUCkqaAsXYuMuRIwy8HI8A70FIEBEWRIicsHhSq6AoODw5gZQs
      N+vPsARBQcChkU2Iems31VUUFacvzeHI6Qm8e+Yyzl9OIJUrwTAa6yIcy6A3GsCOzXHcuX0Y
      77ttBCPxKATe/MNVHSeAldCpAVXXIesqKrqKqq5BMwyohg6DUlBQEBAwhIAlDHiGgcBy8LAc
      RFaAh2XBEmbFqTUty3h5cgIFm63368XLsjg0sglxafnhHUXVkMoWMTaTxvhMGtOpHJKZIrJF
      GUW5CrmqQFF1EELAcyx8Hh5BvxfRoITeaAD93SFs7uvCSF8UkYCvrgMq7cYSAmgVKbmMH42P
      Q9bsFTBaLwLD4MHhEQwFnFccxbGXf6Zk2e38V1EMA69MTmCmaN/0ldVwpADmKxW8OH7J7fzX
      oRoGXp6cwFy582M0zcRxApA1DYcnJ1B2O/8yFF3H4YkJ5KrmuaTbjaMEoBkGDk9OIOugB7xe
      ylcHCKXDEv1ahWMEQCnFkdlZzJacNcVvhEylgjempzouUtwKHCOA8XwOp9Ips82wDGO5HE5n
      0mab0XIcIYCCouAn09OOPbO8UY7MziJt8+Cg7QVgUIqfzcx03OEVK7CQHqI3eKa5k7G9AMZy
      WUwW8mabYVmSchmnbLwUsrUAqpqGI7OzZptheY4mEiip1jvMVA+2FQClFCdSKds+uHai6Dre
      np2FHbNmbCuAoqriPdfr0zQu5rKYr1bMNqPp2FIAlFKcTCWh2njz1m4MSnE0kbDdLGBLAZQ1
      Defm5802w3ZM5PO2i6LbUgBnMml39G8BBqU4kUqabUZTsZ0AVMPA2Yz178LpVC7lcrbKorWd
      AC4X8m6mZwtRDQOXclmzzWgathIApRQX5u3zcDqVs5l52yTK2UoAFV3HTMl5p5raTboiI2+T
      zbCtBDBVKEBzN79tYdwm18fYSgATNnkoVmCqWLRFTMA2AtAMA7Nlc284cxKJchlVG2TY2kYA
      85UKKq73p20YlGLOBgOObQSQsMHDsBpJG7S5fQQgW/9hWI2kDdrcFgKglCJbsV+mYqeTrVYt
      f1rMFgLQKEVBcfP+201JVRsuAWs2thBARdMauj3aZeNYPSBmCwG4p77Mo2jxtreFAMoWfwhW
      xoqFD6/HFgKw6pUn6tXlg2EYUCoVUEqhWqxOgdWvUDS/REcTUC32EPKZDMZPnoQiVxAbGABh
      GRQz8/D4fMgmEtj38CEwjDXGJqtHg63RymugWawaPcfzKGZziPbVKiH2Dg9DqVbhlSRIoSDa
      VyKucRotn2Q2tqgQc2T2Co4n7XVUzyrcEo7ggaEhs83YMLaYAZg2ltVsBEopCvPz0DUNmStX
      IBeLyCWToJQiNTODqixj5sIFFLNZzE1Omm1uXVik6VfFFnsAqwhAVzXMjY/DI0lQymVMX7gA
      wzCw5/77kbkyi7nxcXCCgHwmg1AsZra5dcESa4+h1rb+KgLTedUHV4Yin8lAKZchF4ugFNBU
      FZViEYauQfB6UUin4ZUkTF+4YIl8e4G1dheyxQwgsNYQAMNx2L5/PwSvF7qug+U46JqGcj6P
      Tbt2gRcEqNUqOEFA/+hoWyumbxSrtP1q2EIAImeNP4NhGPiCQQDXGp7jeXhEcfE17MLfwvNt
      tm5j+Dhr2Lka1p6/ruK3SGexI5LF294WAvDxPFgLLBfsSEAQzDahIWwhAI5hLD8SWRGBZS2z
      /FwNWwiAIQQRr9dsMxxHSPBYfua1hQAAIOoKoO3ERNESnqqbYRsBxCW/2SY4jl6fz2wTGsY2
      AugWRXAWyaC0AwRAXJLMNqNhbNNjeIZBzCuu/UKXphDyeOCzgePBNgIghGAoGDDbDMcw6A9Y
      JgfrZthGAACwKRgy2wTHYJfBxlYCCAoCYqK7DGo1Es+j12f99T9gMwEQQrAlFDbbDNszGgrb
      xuFgj7/iOm6JRGzzcDoRglob2wXb9RQvy2LkasalS/Pp8/sR9njMNqNp2E4AhBDs6rLGaSor
      sjsWs3z093psJwCgFqIfDNjDS9FJRL1e9Pvt1a62FAAhBHu7e8w2w3bs7emxfPLbjdhSAEAt
      T2XYnQWaRo/PZ8s4i20FQAjBgXif7UYss9gfj9si8nsjthUAUMtXuc3dEDfM1nAEcZsEvm7E
      1gIghGBvTw+CFj+2ZyYix+FAPG4rz8/12FoAQO3Y3vsHBi1132YncXdfvy2yPlfD9gIAgD5J
      wi6L3LTWSWwNh7ElZL+N7/U4QgCEENzZG0e3myhXNyGPB/f0D9h26bOAIwQA1G6OeGh4xPK3
      GLQDgWFwaHgEHovf+lYPjhEAAPgFAb80PAzO5qNaIxAA9w8OOeaWDUcJAADiPgn3Dw65m+JV
      eF9fn6OSCR0nAEIINodCuLu/32xTOo47e3txW5e9kt3WwnECAGoi2Bntwj19rggWuKOnB3u7
      exzV+QGblEjaKJRSnM6k8bOZGTi2EVAb+Z3Y+QGHCwCoieBSPofXpqagGdYqttcoDCG4p68f
      26NRR3Z+wBUAgJoIUrKMlycnHFN13sOyODg0jEG/37GdH3AFsISSquLHly9jplQ025SWEhNF
      PDg0jJCNjjZuFFcAN2BQimOJBI4lEzBs2DQ7u7pwIN7nXhxwFVcAK0ApRVKW8frUZcxXq2ab
      0xQCgoD7+gcw4PAlz424ArgJumHgZDqF44kEFItukBlCsDsWw+3dPZYvaNcKXAGsAaUUsqbh
      yOwsLmTnLeUu3RIK4c7eOIKC4I76q+AKoE4opchWqziWTGAsm+1YITAAhoJB7O3usUUBi1bj
      CmCdUEpRVFWcyaRxJpNBVdfNNglA7eDPaCiMXbGYO+KvA1cADaAbBibyeZzPzmOmWITe5qZk
      AMT9fmwNh7EpGALPMG7HXyeuAJoApRSKrmOqWMBUoYiZUrFlATWR49AnSRjwBzAcDMDLcm6n
      bwBXAE1moTkLioKEXEZalpGWKygoCoqqUvfegQAQeR5hwYOI14uYKCImigh5PCCA2+mbhCuA
      NrDQxBRAWVUhaxoUXYdGDWgGBQUFSxgILAOeqdXe9XHc4j08bmdvHa4AXByNGw93cTSuAFwc
      jSsAF0fjCsDF0fwzbPfzXIyXNC4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='building year and price' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
